name: Code Coverage

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches:
      - develop
      - main
  pull_request:
    branches:
      - main
      - develop

jobs:
  coverage:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: packages/stadata_flutter_sdk
    steps:
      - name: üìö Git Checkout
        uses: actions/checkout@v4
      - name: üê¶ Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          cache: true
          cache-key: flutter-:os:-:channel:-:version:-:arch:-:hash:-${{ hashFiles('**/pubspec.lock') }}
      - name: üì¶ Install Dependencies
        run: |
          flutter pub global activate very_good_cli
          very_good packages get --recursive
      - name: Run Tests
        run: |
          very_good test -j 4  --optimization --coverage --test-randomize-ordering-seed random
      - name: Setup Lcov
        uses: hrishikesh-kadam/setup-lcov@v1
      - name: Cleaning lcov.info
        run: |
          lcov --remove ./coverage/lcov.info \
          "**/*.config.dart" \
          "**/base_entity_*.dart" \
          "**/base_entity.dart" \
          "**/network_client.dart" \
          "**/request_data.dart" \
          "**/response_data.dart" \
          "**/*_model.dart" \
          "**/base_network_injector.dart" \
          "**/result.dart" \
          "**/stadata_flutter_sdk.dart" \
          "**/register_module.dart" \
          "**/http_*.dart" \
          "**/*_http_module.dart" \
          "**/*_log_*.dart" \
          "**/*.g.dart" \
          "**/*.freezed.dart" \
          "**/*_serializer.dart" \
          "**/*_converter.dart" \
          "**/service_locator.dart" \
          "**/retry_interceptor.dart" \
          "**/env.dart" \
          "**/api_config.dart" \
          "**/usecase.dart" \
          "**/injector.dart" \
          "**/*_injector.dart" \
          -o ./coverage/lcov.info
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: "./coverage/lcov.info"
          token: ${{ secrets.CODECOV_TOKEN }}
