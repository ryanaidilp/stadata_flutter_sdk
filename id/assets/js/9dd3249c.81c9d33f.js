"use strict";(self.webpackChunkstadata_flutter_sdk=self.webpackChunkstadata_flutter_sdk||[]).push([[2173],{8090:(n,a,e)=>{e.r(a),e.d(a,{assets:()=>d,contentTitle:()=>r,default:()=>c,frontMatter:()=>l,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"api-docs/view/intro","title":"Pengantar","description":"API Tampilan menyediakan metode untuk mengambil informasi terperinci tentang item spesifik dari API BPS. Berbeda dengan API List yang mengembalikan koleksi data, API Tampilan berfokus pada mendapatkan detail komprehensif tentang item individual.","source":"@site/i18n/id/docusaurus-plugin-content-docs/version-0.8.0/api-docs/view/intro.md","sourceDirName":"api-docs/view","slug":"/api-docs/view/intro","permalink":"/stadata_flutter_sdk/id/docs/0.8.0/api-docs/view/intro","draft":false,"unlisted":false,"editUrl":"https://github.com/ryanaidilp/stadata_flutter_sdk/tree/main/docs/versioned_docs/version-0.8.0/api-docs/view/intro.md","tags":[],"version":"0.8.0","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"View API","permalink":"/stadata_flutter_sdk/id/docs/0.8.0/category/view-api"},"next":{"title":"Berita","permalink":"/stadata_flutter_sdk/id/docs/0.8.0/api-docs/view/news"}}');var t=e(4848),s=e(8453);const l={sidebar_position:1},r="Pengantar",d={},o=[{value:"Penggunaan",id:"penggunaan",level:2},{value:"Metode Tampilan yang Tersedia",id:"metode-tampilan-yang-tersedia",level:2},{value:"Data Konten",id:"data-konten",level:3},{value:"Data Klasifikasi",id:"data-klasifikasi",level:3},{value:"Pola Penggunaan",id:"pola-penggunaan",level:2},{value:"Penanganan Error",id:"penanganan-error",level:2},{value:"Hubungan dengan API List",id:"hubungan-dengan-api-list",level:2}];function u(n){const a={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(a.header,{children:(0,t.jsx)(a.h1,{id:"pengantar",children:"Pengantar"})}),"\n",(0,t.jsx)(a.p,{children:"API Tampilan menyediakan metode untuk mengambil informasi terperinci tentang item spesifik dari API BPS. Berbeda dengan API List yang mengembalikan koleksi data, API Tampilan berfokus pada mendapatkan detail komprehensif tentang item individual."}),"\n",(0,t.jsx)(a.h2,{id:"penggunaan",children:"Penggunaan"}),"\n",(0,t.jsx)(a.p,{children:"Untuk menggunakan API Tampilan, Anda dapat mengaksesnya menggunakan kode berikut:"}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-dart",children:"final view = StadataFlutter.instance.view;\n"})}),"\n",(0,t.jsx)(a.h2,{id:"metode-tampilan-yang-tersedia",children:"Metode Tampilan yang Tersedia"}),"\n",(0,t.jsx)(a.p,{children:"API Tampilan saat ini mendukung pengambilan informasi detail untuk jenis data berikut:"}),"\n",(0,t.jsx)(a.h3,{id:"data-konten",children:"Data Konten"}),"\n",(0,t.jsxs)(a.ul,{children:["\n",(0,t.jsxs)(a.li,{children:[(0,t.jsx)(a.strong,{children:(0,t.jsx)(a.a,{href:"./publication",children:"Publikasi"})}),": Dapatkan informasi publikasi detail berdasarkan ID dan domain"]}),"\n",(0,t.jsxs)(a.li,{children:[(0,t.jsx)(a.strong,{children:(0,t.jsx)(a.a,{href:"./static-table",children:"Tabel Statis"})}),": Ambil detail tabel statis yang komprehensif"]}),"\n",(0,t.jsxs)(a.li,{children:[(0,t.jsx)(a.strong,{children:(0,t.jsx)(a.a,{href:"./news",children:"Berita"})}),": Akses informasi artikel berita yang detail"]}),"\n",(0,t.jsxs)(a.li,{children:[(0,t.jsx)(a.strong,{children:(0,t.jsx)(a.a,{href:"./press-release",children:"Siaran Pers"})}),": Dapatkan detail siaran pers yang lengkap"]}),"\n"]}),"\n",(0,t.jsx)(a.h3,{id:"data-klasifikasi",children:"Data Klasifikasi"}),"\n",(0,t.jsxs)(a.ul,{children:["\n",(0,t.jsxs)(a.li,{children:[(0,t.jsx)(a.strong,{children:(0,t.jsx)(a.a,{href:"./statistic-classification",children:"Klasifikasi Statistik"})}),": Ambil informasi klasifikasi KBLI/KBKI yang detail dengan data hierarkis"]}),"\n"]}),"\n",(0,t.jsx)(a.h2,{id:"pola-penggunaan",children:"Pola Penggunaan"}),"\n",(0,t.jsx)(a.p,{children:"Semua metode API Tampilan mengikuti pola yang konsisten:"}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-dart",children:"// Pola umum untuk panggilan API Tampilan\nfinal result = await StadataFlutter.instance.view.namaMetode(\n  id: idItem,           // Wajib: ID dari item spesifik\n  domain: kodeDomain,   // Wajib: Kode domain untuk data\n  lang: DataLanguage.id, // Opsional: Preferensi bahasa\n);\n"})}),"\n",(0,t.jsx)(a.h2,{id:"penanganan-error",children:"Penanganan Error"}),"\n",(0,t.jsx)(a.p,{children:"Metode API Tampilan mengembalikan objek nullable dan mungkin melempar exception spesifik:"}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-dart",children:"try {\n  final publication = await StadataFlutter.instance.view.publication(\n    id: '123',\n    domain: '7200',\n    lang: DataLanguage.id,\n  );\n  \n  if (publication != null) {\n    // Tangani pengambilan data yang berhasil\n    print('Publikasi: ${publication.title}');\n  } else {\n    // Tangani kasus dimana item tidak ditemukan\n    print('Publikasi tidak ditemukan');\n  }\n} on PublicationException catch (e) {\n  print('Error publikasi: ${e.message}');\n} on ApiException catch (e) {\n  print('Error API: ${e.message}');\n} catch (e) {\n  print('Error tak terduga: $e');\n}\n"})}),"\n",(0,t.jsx)(a.h2,{id:"hubungan-dengan-api-list",children:"Hubungan dengan API List"}),"\n",(0,t.jsx)(a.p,{children:"API Tampilan bekerja paling baik dikombinasikan dengan API List:"}),"\n",(0,t.jsxs)(a.ol,{children:["\n",(0,t.jsxs)(a.li,{children:[(0,t.jsx)(a.strong,{children:"Penemuan"}),": Gunakan API List untuk menemukan item yang menarik"]}),"\n",(0,t.jsxs)(a.li,{children:[(0,t.jsx)(a.strong,{children:"Detail"}),": Gunakan API Tampilan untuk mendapatkan informasi komprehensif tentang item spesifik"]}),"\n"]}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-dart",children:"// Contoh alur kerja\n// 1. Temukan publikasi menggunakan API List\nfinal publicationsList = await StadataFlutter.instance.list.publications(\n  domain: '7200',\n);\n\n// 2. Dapatkan detail untuk publikasi spesifik menggunakan API Tampilan\nfinal firstPublication = publicationsList.data.first;\nfinal detailedPublication = await StadataFlutter.instance.view.publication(\n  id: firstPublication.id,\n  domain: '7200',\n);\n"})})]})}function c(n={}){const{wrapper:a}={...(0,s.R)(),...n.components};return a?(0,t.jsx)(a,{...n,children:(0,t.jsx)(u,{...n})}):u(n)}},8453:(n,a,e)=>{e.d(a,{R:()=>l,x:()=>r});var i=e(6540);const t={},s=i.createContext(t);function l(n){const a=i.useContext(s);return i.useMemo(function(){return"function"==typeof n?n(a):{...a,...n}},[a,n])}function r(n){let a;return a=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:l(n.components),i.createElement(s.Provider,{value:a},n.children)}}}]);