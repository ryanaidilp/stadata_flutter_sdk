"use strict";(self.webpackChunkstadata_flutter_sdk=self.webpackChunkstadata_flutter_sdk||[]).push([[7991],{5356:(a,n,e)=>{e.r(n),e.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"api-docs/list/static-tables","title":"Tabel Statis","description":"API Tabel Statis menyediakan akses ke koleksi komprehensif tabel data terstruktur dari BPS (Badan Pusat Statistik) Indonesia di semua wilayah. Tabel statis merupakan dasar dari distribusi data statistik Indonesia, berisi data numerik terorganisir yang disajikan dalam format tabel standar dengan baris, kolom, dan struktur data yang konsisten.","source":"@site/i18n/id/docusaurus-plugin-content-docs/version-0.8.0/api-docs/list/static-tables.md","sourceDirName":"api-docs/list","slug":"/api-docs/list/static-tables","permalink":"/stadata_flutter_sdk/id/docs/0.8.0/api-docs/list/static-tables","draft":false,"unlisted":false,"editUrl":"https://github.com/ryanaidilp/stadata_flutter_sdk/tree/main/docs/versioned_docs/version-0.8.0/api-docs/list/static-tables.md","tags":[],"version":"0.8.0","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Publikasi","permalink":"/stadata_flutter_sdk/id/docs/0.8.0/api-docs/list/publications"},"next":{"title":"Klasifikasi Statistik (KBLI & KBKI)","permalink":"/stadata_flutter_sdk/id/docs/0.8.0/api-docs/list/statistic-classifications"}}');var t=e(4848),s=e(8453);const r={},l="Tabel Statis",d={},o=[{value:"Memahami Tabel Statis BPS",id:"memahami-tabel-statis-bps",level:2},{value:"Struktur Sistem Tabel Statis",id:"struktur-sistem-tabel-statis",level:2},{value:"Parameter",id:"parameter",level:2},{value:"Contoh",id:"contoh",level:2},{value:"1. Mengambil Semua Tabel Statis untuk Domain",id:"1-mengambil-semua-tabel-statis-untuk-domain",level:3},{value:"2. Mencari Tabel Statis berdasarkan Kata Kunci dan Periode",id:"2-mencari-tabel-statis-berdasarkan-kata-kunci-dan-periode",level:3},{value:"3. Menganalisis Tabel Statis di Berbagai Domain",id:"3-menganalisis-tabel-statis-di-berbagai-domain",level:3},{value:"4. Sistem Manajemen dan Analisis Tabel Statis",id:"4-sistem-manajemen-dan-analisis-tabel-statis",level:3},{value:"5. Sistem Integrasi dan Pemrosesan Tabel Statis",id:"5-sistem-integrasi-dan-pemrosesan-tabel-statis",level:3},{value:"Properti (StaticTable)",id:"properti-statictable",level:2},{value:"Kategori Tabel Statis Umum",id:"kategori-tabel-statis-umum",level:2},{value:"Data Ekonomi",id:"data-ekonomi",level:3},{value:"Data Demografis dan Sosial",id:"data-demografis-dan-sosial",level:3},{value:"Data Regional dan Administratif",id:"data-regional-dan-administratif",level:3},{value:"Data Sektoral",id:"data-sektoral",level:3},{value:"Alur Kerja Manajemen Tabel Statis",id:"alur-kerja-manajemen-tabel-statis",level:2},{value:"Integrasi dengan API Lain",id:"integrasi-dengan-api-lain",level:2},{value:"Membangun Sistem Manajemen Data Komprehensif",id:"membangun-sistem-manajemen-data-komprehensif",level:3},{value:"Penanganan Error",id:"penanganan-error",level:2},{value:"Pertimbangan Performa",id:"pertimbangan-performa",level:2}];function c(a){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...a.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"tabel-statis",children:"Tabel Statis"})}),"\n",(0,t.jsx)(n.p,{children:"API Tabel Statis menyediakan akses ke koleksi komprehensif tabel data terstruktur dari BPS (Badan Pusat Statistik) Indonesia di semua wilayah. Tabel statis merupakan dasar dari distribusi data statistik Indonesia, berisi data numerik terorganisir yang disajikan dalam format tabel standar dengan baris, kolom, dan struktur data yang konsisten."}),"\n",(0,t.jsx)(n.p,{children:"Tabel statis BPS berfungsi sebagai sumber utama untuk data statistik resmi, memungkinkan peneliti, analis, dan pembuat kebijakan mengakses informasi terstruktur yang dapat diandalkan dalam berbagai format untuk analisis, pelaporan, dan pengambilan keputusan berbasis data."}),"\n",(0,t.jsx)(n.h2,{id:"memahami-tabel-statis-bps",children:"Memahami Tabel Statis BPS"}),"\n",(0,t.jsx)(n.p,{children:"Tabel statis menyediakan akses terstruktur ke data statistik resmi:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Data Terstruktur"}),": Format tabel standar dengan baris dan kolom yang konsisten untuk kemudahan analisis"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Integritas Data"}),": Data resmi yang telah diverifikasi dan divalidasi oleh BPS untuk keakuratan dan konsistensi"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Aksesibilitas Multi-Format"}),": Tersedia dalam format HTML dan Excel untuk berbagai kebutuhan analisis"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Organisasi Temporal"}),": Data yang diorganisir berdasarkan periode waktu dengan filter bulan dan tahun"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Pencarian Tematik"}),": Kemampuan pencarian berdasarkan kata kunci untuk akses konten yang ditargetkan"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"struktur-sistem-tabel-statis",children:"Struktur Sistem Tabel Statis"}),"\n",(0,t.jsx)(n.p,{children:"Tabel statis BPS dirancang untuk memaksimalkan utilitas data:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Klasifikasi Subjek"}),": Diorganisir berdasarkan area tematik untuk navigasi logis dan penemuan konten"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Cakupan Geografis"}),": Tersedia dari kantor BPS nasional, provinsi, dan lokal untuk analisis multi-level"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Granularitas Temporal"}),": Filtering berdasarkan bulan dan tahun untuk analisis periode spesifik"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Format Distribusi"}),": Dukungan format HTML untuk preview web dan Excel untuk analisis mendalam"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Metadata Lengkap"}),": Informasi penciptaan, pembaruan, dan ukuran file untuk manajemen data"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"parameter",children:"Parameter"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Parameter"}),(0,t.jsx)(n.th,{children:"Tipe"}),(0,t.jsx)(n.th,{children:"Deskripsi"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"domain"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"String"})}),(0,t.jsxs)(n.td,{children:["Kode domain (wilayah) untuk mengambil tabel statis ",(0,t.jsx)(n.strong,{children:"(wajib)"})]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"lang"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"DataLanguage"})}),(0,t.jsxs)(n.td,{children:["Bahasa untuk data tabel statis (default: ",(0,t.jsx)(n.code,{children:"DataLanguage.id"}),")"]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"page"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"int"})}),(0,t.jsxs)(n.td,{children:["Nomor halaman (default: ",(0,t.jsx)(n.code,{children:"1"}),")"]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"keyword"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"String?"})}),(0,t.jsx)(n.td,{children:"Kata kunci untuk mencari tabel statis (opsional)"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"bulan"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"int?"})}),(0,t.jsxs)(n.td,{children:["Bulan untuk penyaringan tabel statis (opsional - ",(0,t.jsx)(n.code,{children:"1..12"}),")"]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"tahun"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"int?"})}),(0,t.jsx)(n.td,{children:"Tahun untuk penyaringan tabel statis (opsional)"})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"contoh",children:"Contoh"}),"\n",(0,t.jsx)(n.h3,{id:"1-mengambil-semua-tabel-statis-untuk-domain",children:"1. Mengambil Semua Tabel Statis untuk Domain"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dart",children:"// Mengambil tabel statis dari BPS Jawa Tengah\nfinal hasilTabelStatis = await StadataFlutter.instance.list.staticTable(\n  domain: '3300', // Kode domain Jawa Tengah\n  lang: DataLanguage.id,\n);\n\nfinal daftarTabelStatis = hasilTabelStatis.data;\nfinal paginasi = hasilTabelStatis.pagination;\n\n// Mencetak informasi paginasi\nprint('Halaman Saat Ini: ${paginasi.page}');\nprint('Total Halaman: ${paginasi.pages}');\nprint('Jumlah Data dalam Halaman Ini: ${paginasi.count}');\nprint('Per Halaman: ${paginasi.perPage}');\nprint('Total: ${paginasi.total}');\nprint('------------------------');\n\n// Mencetak data tabel statis yang diambil\nfor (final tabelStatis in daftarTabelStatis) {\n  print('ID Tabel: ${tabelStatis.id}');\n  print('Judul Tabel: ${tabelStatis.title}');\n  print('ID Subjek: ${tabelStatis.subjectId}');\n  print('Subjek: ${tabelStatis.subject}');\n  print('Ukuran: ${tabelStatis.size}');\n  print('Diperbarui Pada: ${tabelStatis.updatedAt}');\n  print('Dibuat Pada: ${tabelStatis.createdAt}');\n  print('Tautan Excel: ${tabelStatis.excel}');\n  \n  // Memeriksa ketersediaan konten tabel HTML\n  if (tabelStatis.table != null && tabelStatis.table!.isNotEmpty) {\n    print('Preview HTML tersedia: ${tabelStatis.table!.substring(0, 100)}...');\n  }\n  \n  print('------------------------');\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"2-mencari-tabel-statis-berdasarkan-kata-kunci-dan-periode",children:"2. Mencari Tabel Statis berdasarkan Kata Kunci dan Periode"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dart",children:"// Mencari tabel statis ekonomi untuk periode tertentu\nfinal tabelEkonomi = await StadataFlutter.instance.list.staticTable(\n  domain: '0000', // Level nasional\n  lang: DataLanguage.id,\n  keyword: 'ekonomi', // Mencari tabel terkait ekonomi\n  tahun: 2023, // Data tahun 2023\n  bulan: 12, // Data bulan Desember\n);\n\n// Memproses hasil pencarian\nprint('=== Tabel Statis Ekonomi Desember 2023 ===');\nfor (final tabel in tabelEkonomi.data) {\n  print('Tabel Ekonomi: ${tabel.title}');\n  print('Subjek: ${tabel.subject}');\n  print('Ukuran File: ${tabel.size}');\n  print('Tanggal Diperbarui: ${tabel.updatedAt}');\n  \n  // Mengkategorikan berdasarkan ukuran file\n  final fileSize = tabel.size.toLowerCase();\n  if (fileSize.contains('mb')) {\n    print('  Kategori: Tabel dataset besar');\n  } else if (fileSize.contains('kb')) {\n    print('  Kategori: Tabel dataset sedang');\n  } else {\n    print('  Kategori: Tabel dataset kecil');\n  }\n  \n  // Memeriksa format yang tersedia\n  final hasExcel = tabel.excel.isNotEmpty;\n  final hasHtml = tabel.table != null && tabel.table!.isNotEmpty;\n  \n  print('  Format Excel: ${hasExcel ? 'Tersedia' : 'Tidak tersedia'}');\n  print('  Format HTML: ${hasHtml ? 'Tersedia' : 'Tidak tersedia'}');\n  \n  print('------------------------');\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"3-menganalisis-tabel-statis-di-berbagai-domain",children:"3. Menganalisis Tabel Statis di Berbagai Domain"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dart",children:"// Membandingkan ketersediaan tabel statis di berbagai wilayah\nclass StaticTableExplorer {\n  static Future<void> compareTablesAcrossDomains() async {\n    final domains = ['0000', '3100', '3200', '3300']; // Nasional, Jakarta, Jawa Barat, Jawa Tengah\n    final domainTables = <String, List<StaticTable>>{};\\\n    \n    for (final domain in domains) {\n      final tables = await StadataFlutter.instance.list.staticTable(\n        domain: domain,\n        lang: DataLanguage.id,\n      );\n      domainTables[domain] = tables.data;\n      \n      await Future.delayed(Duration(milliseconds: 300));\n    }\n    \n    print('=== Distribusi Tabel Statis ===');\n    for (final entry in domainTables.entries) {\n      print('Domain ${entry.key}: ${entry.value.length} tabel');\n      \n      // Menganalisis distribusi subjek\n      final subjects = <String?, int>{};\n      final fileSizes = <String, int>{};\n      \n      for (final table in entry.value) {\n        subjects[table.subject] = (subjects[table.subject] ?? 0) + 1;\n        \n        // Mengkategorikan ukuran file\n        final size = table.size.toLowerCase();\n        String sizeCategory;\n        if (size.contains('mb')) {\n          sizeCategory = 'Besar (MB)';\n        } else if (size.contains('kb')) {\n          sizeCategory = 'Sedang (KB)';\n        } else {\n          sizeCategory = 'Kecil';\n        }\n        fileSizes[sizeCategory] = (fileSizes[sizeCategory] ?? 0) + 1;\n      }\n      \n      print('  Subjek teratas:');\n      final sortedSubjects = subjects.entries.toList()\n        ..sort((a, b) => b.value.compareTo(a.value));\n      \n      for (final subjectEntry in sortedSubjects.take(3)) {\n        final subjectName = subjectEntry.key ?? 'Tidak dikategorikan';\n        print('    $subjectName: ${subjectEntry.value} tabel');\n      }\n      \n      print('  Distribusi ukuran file:');\n      for (final sizeEntry in fileSizes.entries) {\n        print('    ${sizeEntry.key}: ${sizeEntry.value} file');\n      }\n      \n      print('---');\n    }\n  }\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"4-sistem-manajemen-dan-analisis-tabel-statis",children:"4. Sistem Manajemen dan Analisis Tabel Statis"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dart",children:"// Sistem manajemen tabel statis yang komprehensif\nclass StaticTableManager {\n  static Future<void> manageStaticTableWorkflow(String domain) async {\n    try {\n      // 1. Mengambil semua tabel statis untuk domain\n      final allTables = await StadataFlutter.instance.list.staticTable(\n        domain: domain,\n        lang: DataLanguage.id,\n      );\n      \n      print('=== Manajemen Tabel Statis ===');\n      print('Total tabel di domain $domain: ${allTables.data.length}');\n      \n      // 2. Menganalisis distribusi berdasarkan subjek\n      final subjectDistribution = <String?, List<StaticTable>>{};\n      for (final table in allTables.data) {\n        final subject = table.subject;\n        subjectDistribution[subject] = (subjectDistribution[subject] ?? [])..add(table);\n      }\n      \n      print('Subjek yang tersedia: ${subjectDistribution.keys.length}');\n      \n      // 3. Menganalisis setiap subjek\n      for (final entry in subjectDistribution.entries) {\n        final subject = entry.key ?? 'Tidak dikategorikan';\n        final tables = entry.value;\n        \n        print('\\\\n=== Subjek: $subject ===');\n        print('Jumlah tabel: ${tables.length}');\n        \n        // Menganalisis ketersediaan format\n        final withExcel = tables.where((t) => t.excel.isNotEmpty).length;\n        final withHtml = tables.where((t) => t.table != null && t.table!.isNotEmpty).length;\n        \n        print('Dengan Excel: $withExcel');\n        print('Dengan HTML: $withHtml');\n        \n        // Menganalisis tren temporal\n        final currentYear = DateTime.now().year;\n        final recentTables = tables.where((t) => \n            t.updatedAt.year >= currentYear - 1).length;\n        \n        print('Tabel terbaru (1 tahun terakhir): $recentTables');\n        \n        // Menganalisis ukuran file\n        final totalSizeMB = tables.fold<double>(0.0, (sum, table) {\n          final sizeStr = table.size.toLowerCase();\n          if (sizeStr.contains('mb')) {\n            final sizeValue = double.tryParse(sizeStr.replaceAll(RegExp(r'[^0-9.]'), '')) ?? 0.0;\n            return sum + sizeValue;\n          } else if (sizeStr.contains('kb')) {\n            final sizeValue = double.tryParse(sizeStr.replaceAll(RegExp(r'[^0-9.]'), '')) ?? 0.0;\n            return sum + (sizeValue / 1024); // Convert KB to MB\n          }\n          return sum;\n        });\n        \n        print('Total ukuran: ${totalSizeMB.toStringAsFixed(2)} MB');\n        \n        // Menampilkan contoh tabel\n        print('Contoh tabel:');\n        for (final table in tables.take(2)) {\n          print('  \u2022 ${table.title} (${table.size})');\n        }\n      }\n      \n      // 4. Rekomendasi penggunaan\n      final totalTables = allTables.data.length;\n      final excelAvailability = allTables.data.where((t) => t.excel.isNotEmpty).length / totalTables;\n      final htmlAvailability = allTables.data.where((t) => t.table != null && t.table!.isNotEmpty).length / totalTables;\n      \n      print('\\\\n=== Rekomendasi Penggunaan ===');\n      print('Ketersediaan Excel: ${(excelAvailability * 100).toStringAsFixed(1)}%');\n      print('Ketersediaan HTML: ${(htmlAvailability * 100).toStringAsFixed(1)}%');\n      \n      if (excelAvailability > 0.8) {\n        print('Rekomendasi: Domain ini ideal untuk analisis data mendalam dengan Excel');\n      } else if (excelAvailability > 0.5) {\n        print('Rekomendasi: Sebagian besar data tersedia untuk analisis Excel');\n      } else {\n        print('Rekomendasi: Fokus pada preview HTML untuk akses data');\n      }\n      \n      if (htmlAvailability > 0.7) {\n        print('Rekomendasi: Cocok untuk integrasi web dan preview cepat');\n      }\n      \n    } catch (e) {\n      print('Error manajemen tabel: $e');\n    }\n  }\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"5-sistem-integrasi-dan-pemrosesan-tabel-statis",children:"5. Sistem Integrasi dan Pemrosesan Tabel Statis"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dart",children:"// Sistem pemrosesan file dan integrasi tabel statis\nclass StaticTableProcessor {\n  static Future<void> processStaticTableData() async {\n    try {\n      // 1. Mengambil tabel berdasarkan kriteria tertentu\n      final tables = await StadataFlutter.instance.list.staticTable(\n        domain: '0000', // Level nasional\n        lang: DataLanguage.id,\n        keyword: 'inflasi', // Fokus pada data inflasi\n        tahun: 2023,\n      );\n      \n      print('=== Pemrosesan Tabel Statis Inflasi 2023 ===');\n      print('Tabel yang ditemukan: ${tables.data.length}');\n      \n      // 2. Menganalisis struktur data\n      final processingStats = <String, dynamic>{\n        'totalTables': tables.data.length,\n        'excelFiles': 0,\n        'htmlTables': 0,\n        'averageSize': 0.0,\n        'processingRecommendations': <String>[],\n      };\n      \n      double totalSizeKB = 0.0;\n      \n      for (final table in tables.data) {\n        // Menghitung file Excel\n        if (table.excel.isNotEmpty) {\n          processingStats['excelFiles']++;\n        }\n        \n        // Menghitung tabel HTML\n        if (table.table != null && table.table!.isNotEmpty) {\n          processingStats['htmlTables']++;\n        }\n        \n        // Menghitung ukuran rata-rata\n        final sizeStr = table.size.toLowerCase();\n        double sizeKB = 0.0;\n        \n        if (sizeStr.contains('mb')) {\n          final sizeValue = double.tryParse(sizeStr.replaceAll(RegExp(r'[^0-9.]'), '')) ?? 0.0;\n          sizeKB = sizeValue * 1024;\n        } else if (sizeStr.contains('kb')) {\n          sizeKB = double.tryParse(sizeStr.replaceAll(RegExp(r'[^0-9.]'), '')) ?? 0.0;\n        }\n        \n        totalSizeKB += sizeKB;\n        \n        print('Memproses: ${table.title}');\n        print('  Format Excel: ${table.excel.isNotEmpty ? 'Tersedia' : 'Tidak tersedia'}');\n        print('  Format HTML: ${table.table != null ? 'Tersedia' : 'Tidak tersedia'}');\n        print('  Ukuran: ${table.size}');\n        print('  Terakhir Diperbarui: ${table.updatedAt}');\n        print('---');\n      }\n      \n      // 3. Menghitung statistik\n      if (tables.data.isNotEmpty) {\n        processingStats['averageSize'] = totalSizeKB / tables.data.length;\n      }\n      \n      // 4. Memberikan rekomendasi pemrosesan\n      final excelRatio = processingStats['excelFiles'] / processingStats['totalTables'];\n      final htmlRatio = processingStats['htmlTables'] / processingStats['totalTables'];\n      final avgSizeKB = processingStats['averageSize'] as double;\n      \n      final recommendations = processingStats['processingRecommendations'] as List<String>;\n      \n      if (excelRatio > 0.8) {\n        recommendations.add('Gunakan pemrosesan batch Excel untuk analisis data');\n        recommendations.add('Implementasikan parser Excel untuk ekstraksi data otomatis');\n      }\n      \n      if (htmlRatio > 0.7) {\n        recommendations.add('Gunakan parser HTML untuk preview data cepat');\n        recommendations.add('Implementasikan rendering tabel web untuk integrasi UI');\n      }\n      \n      if (avgSizeKB > 1024) { // > 1MB\n        recommendations.add('Implementasikan download progresif untuk file besar');\n        recommendations.add('Pertimbangkan kompresi data untuk transfer');\n      } else {\n        recommendations.add('File berukuran sedang - cocok untuk pemrosesan real-time');\n      }\n      \n      print('\\\\n=== Ringkasan Pemrosesan ===');\n      print('Total Tabel: ${processingStats['totalTables']}');\n      print('File Excel: ${processingStats['excelFiles']} (${(excelRatio * 100).toStringAsFixed(1)}%)');\n      print('Tabel HTML: ${processingStats['htmlTables']} (${(htmlRatio * 100).toStringAsFixed(1)}%)');\n      print('Ukuran Rata-rata: ${avgSizeKB.toStringAsFixed(1)} KB');\n      \n      print('\\\\nRekomendasi Pemrosesan:');\n      for (final recommendation in recommendations) {\n        print('\u2022 $recommendation');\n      }\n      \n    } catch (e) {\n      print('Error pemrosesan tabel: $e');\n    }\n  }\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"properti-statictable",children:"Properti (StaticTable)"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Properti"}),(0,t.jsx)(n.th,{children:"Tipe"}),(0,t.jsx)(n.th,{children:"Deskripsi"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"id"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"int"})}),(0,t.jsx)(n.td,{children:"Pengenal unik tabel"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"title"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"String"})}),(0,t.jsx)(n.td,{children:"Judul atau nama tabel"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"subjectId"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"int"})}),(0,t.jsx)(n.td,{children:"Pengenal subjek yang terkait dengan tabel"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"subject"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"String?"})}),(0,t.jsx)(n.td,{children:"Nama atau deskripsi subjek (opsional)"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"size"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"String"})}),(0,t.jsx)(n.td,{children:"Ukuran file dalam format string (KB/MB)"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"table"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"String?"})}),(0,t.jsx)(n.td,{children:"Representasi HTML dari tabel untuk preview (opsional)"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"updatedAt"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"DateTime"})}),(0,t.jsx)(n.td,{children:"Tanggal dan waktu ketika tabel terakhir diperbarui"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"createdAt"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"DateTime?"})}),(0,t.jsx)(n.td,{children:"Tanggal dan waktu ketika tabel dibuat (opsional)"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"excel"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"String"})}),(0,t.jsx)(n.td,{children:"URL untuk mengunduh file Excel terkait dengan tabel"})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"kategori-tabel-statis-umum",children:"Kategori Tabel Statis Umum"}),"\n",(0,t.jsx)(n.h3,{id:"data-ekonomi",children:"Data Ekonomi"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Indikator Makroekonomi"}),": PDB, pertumbuhan ekonomi, inflasi, indeks harga konsumen"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Statistik Ketenagakerjaan"}),": Tingkat pengangguran, partisipasi angkatan kerja, upah dan gaji"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Data Perdagangan"}),": Ekspor-impor, neraca perdagangan, investasi langsung asing"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Statistik Industri"}),": Produksi industri, kapasitas utilisasi, indeks produksi"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"data-demografis-dan-sosial",children:"Data Demografis dan Sosial"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Statistik Penduduk"}),": Sensus penduduk, proyeksi penduduk, distribusi umur dan jenis kelamin"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Statistik Vital"}),": Kelahiran, kematian, perkawinan, perceraian"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Data Pendidikan"}),": Partisipasi sekolah, tingkat melek huruf, pencapaian pendidikan"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Statistik Kesehatan"}),": Akses layanan kesehatan, angka kematian bayi, status gizi"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"data-regional-dan-administratif",children:"Data Regional dan Administratif"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Statistik Provinsi"}),": Data spesifik provinsi, perbandingan antar provinsi"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Data Kabupaten/Kota"}),": Statistik tingkat kabupaten dan kota"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Indikator Pembangunan"}),": Indeks pembangunan manusia, tingkat kemiskinan"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Infrastruktur"}),": Akses listrik, air bersih, telekomunikasi, transportasi"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"data-sektoral",children:"Data Sektoral"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Pertanian"}),": Produksi pangan, luas panen, produktivitas pertanian"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Perumahan"}),": Kondisi perumahan, kepemilikan rumah, fasilitas perumahan"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Lingkungan"}),": Kualitas air, udara, pengelolaan limbah, energi terbarukan"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Teknologi"}),": Akses internet, penggunaan teknologi informasi, inovasi"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"alur-kerja-manajemen-tabel-statis",children:"Alur Kerja Manajemen Tabel Statis"}),"\n",(0,t.jsx)(n.p,{children:"Alur kerja tipikal untuk bekerja dengan tabel statis:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Eksplorasi Domain"}),": Temukan tabel yang tersedia untuk wilayah yang diminati"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Pencarian Tematik"}),": Gunakan kata kunci untuk menemukan tabel spesifik"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Filtering Temporal"}),": Terapkan filter bulan dan tahun untuk periode tertentu"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Evaluasi Format"}),": Pilih antara preview HTML atau download Excel berdasarkan kebutuhan"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Integrasi Analitis"}),": Integrasikan data tabel ke dalam sistem analisis atau pelaporan"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"integrasi-dengan-api-lain",children:"Integrasi dengan API Lain"}),"\n",(0,t.jsx)(n.h3,{id:"membangun-sistem-manajemen-data-komprehensif",children:"Membangun Sistem Manajemen Data Komprehensif"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dart",children:"// Mengintegrasikan tabel statis dengan sumber data BPS lainnya\nFuture<void> buildDataManagementSystem(String domain) async {\n  try {\n    // Mendapatkan informasi domain\n    final domains = await StadataFlutter.instance.list.domains();\n    final currentDomain = domains.data.firstWhere((d) => d.id == domain);\n    \n    // Mendapatkan tabel statis terbaru\n    final staticTables = await StadataFlutter.instance.list.staticTable(\n      domain: domain,\n      lang: DataLanguage.id,\n    );\n    \n    // Mendapatkan variabel terkait\n    final variables = await StadataFlutter.instance.list.variables(\n      domain: domain,\n      lang: DataLanguage.id,\n      showExistingVariable: true,\n    );\n    \n    // Mendapatkan indikator strategis\n    final indicators = await StadataFlutter.instance.list.strategicIndicators(\n      domain: domain,\n      lang: DataLanguage.id,\n    );\n    \n    print('=== Sistem Manajemen Data ${currentDomain.name} ===');\n    print('Tabel Statis: ${staticTables.data.length}');\n    print('Variabel dengan Data: ${variables.data.length}');\n    print('Indikator Strategis: ${indicators.data.length}');\n    \n    // Analisis integrasi data\n    print('\\\\n=== Analisis Integrasi ===');\n    final subjectCoverage = <String, Map<String, int>>{};\n    \n    // Menganalisis cakupan subjek di berbagai sumber data\n    for (final table in staticTables.data) {\n      final subject = table.subject ?? 'Tidak dikategorikan';\n      subjectCoverage[subject] = subjectCoverage[subject] ?? {\n        'tables': 0, 'variables': 0, 'indicators': 0\n      };\n      subjectCoverage[subject]!['tables'] = subjectCoverage[subject]!['tables']! + 1;\n    }\n    \n    for (final variable in variables.data) {\n      final subject = variable.subjectName;\n      subjectCoverage[subject] = subjectCoverage[subject] ?? {\n        'tables': 0, 'variables': 0, 'indicators': 0\n      };\n      subjectCoverage[subject]!['variables'] = subjectCoverage[subject]!['variables']! + 1;\n    }\n    \n    print('Cakupan subjek terpadu:');\n    for (final entry in subjectCoverage.entries) {\n      final subject = entry.key;\n      final counts = entry.value;\n      print('$subject:');\n      print('  Tabel: ${counts['tables']}');\n      print('  Variabel: ${counts['variables']}');\n      print('  Indikator: ${counts['indicators']}');\n    }\n    \n  } catch (e) {\n    print('Error pembuatan sistem manajemen: $e');\n  }\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"penanganan-error",children:"Penanganan Error"}),"\n",(0,t.jsxs)(n.p,{children:["Metode API Tabel Statis mengembalikan ",(0,t.jsx)(n.code,{children:"Future<ListResult<StaticTable>>"})," dan dapat menimbulkan exception spesifik:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"StaticTableException"}),": Error terkait tabel statis (domain tidak valid, error kata kunci, filter waktu tidak valid)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"ApiException"}),": Error terkait jaringan atau API"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"ApiKeyNotFoundException"}),": API key tidak valid atau hilang"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dart",children:"try {\n  final result = await StadataFlutter.instance.list.staticTable(\n    domain: '3200',\n    keyword: 'ekonomi',\n    tahun: 2023,\n    bulan: 12,\n    lang: DataLanguage.id,\n  );\n  \n  // Memproses hasil yang berhasil\n  print('Ditemukan ${result.data.length} tabel statis');\n  \n} on StaticTableException catch (e) {\n  print('Error tabel statis: ${e.message}');\n  // Menangani error validasi domain, kata kunci, atau filter temporal\n  \n} on ApiException catch (e) {\n  print('Error API: ${e.message}');\n  // Menangani error konektivitas jaringan atau layanan API\n  \n} catch (e) {\n  print('Error tidak terduga: $e');\n  // Menangani error tak terduga lainnya\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"pertimbangan-performa",children:"Pertimbangan Performa"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Manajemen File"}),": Implementasikan download progresif untuk file Excel besar"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Caching Data"}),": Cache tabel yang sering diakses untuk mengurangi beban API"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Optimisasi Pencarian"}),": Gunakan kata kunci spesifik untuk mengurangi ukuran set hasil"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Filtering Efisien"}),": Kombinasikan filter temporal untuk mempersempit ruang pencarian"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parsing HTML"}),": Implementasikan parser HTML yang efisien untuk preview tabel"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Manajemen Memori"}),": Pertimbangkan ukuran tabel saat memuat data dalam aplikasi"]}),"\n"]})]})}function u(a={}){const{wrapper:n}={...(0,s.R)(),...a.components};return n?(0,t.jsx)(n,{...a,children:(0,t.jsx)(c,{...a})}):c(a)}},8453:(a,n,e)=>{e.d(n,{R:()=>r,x:()=>l});var i=e(6540);const t={},s=i.createContext(t);function r(a){const n=i.useContext(s);return i.useMemo(function(){return"function"==typeof a?a(n):{...n,...a}},[n,a])}function l(a){let n;return n=a.disableParentContext?"function"==typeof a.components?a.components(t):a.components||t:r(a.components),i.createElement(s.Provider,{value:n},a.children)}}}]);