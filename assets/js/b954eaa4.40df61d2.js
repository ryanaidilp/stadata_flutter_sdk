"use strict";(self.webpackChunkstadata_flutter_sdk=self.webpackChunkstadata_flutter_sdk||[]).push([[5826],{5583:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>o,frontMatter:()=>d,metadata:()=>r,toc:()=>c});var n=i(4848),s=i(8453);const d={},a="Static Tables",r={id:"api-docs/list/static-tables",title:"Static Tables",description:"This method is used to retrieve a list of static tables based on the selected domain (region).",source:"@site/docs/api-docs/list/static-tables.md",sourceDirName:"api-docs/list",slug:"/api-docs/list/static-tables",permalink:"/stadata_flutter_sdk/docs/api-docs/list/static-tables",draft:!1,unlisted:!1,editUrl:"https://github.com/ryanaidilp/stadata_flutter_sdk/tree/main/docs/docs/api-docs/list/static-tables.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Publications",permalink:"/stadata_flutter_sdk/docs/api-docs/list/publications"},next:{title:"Statistical Classification (KBKI & KBLI)",permalink:"/stadata_flutter_sdk/docs/api-docs/list/statistic-classifications"}},l={},c=[{value:"Parameters",id:"parameters",level:2},{value:"Example",id:"example",level:2},{value:"Properties (StaticTable)",id:"properties-statictable",level:2}];function h(e){const t={code:"code",h1:"h1",h2:"h2",img:"img",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"static-tables",children:"Static Tables"}),"\n",(0,n.jsx)(t.p,{children:"This method is used to retrieve a list of static tables based on the selected domain (region)."}),"\n",(0,n.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Parameter"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"domain"})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"String"})}),(0,n.jsx)(t.td,{children:"The domain (region) code for retrieving static tables."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"lang"})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"DataLanguage"})}),(0,n.jsxs)(t.td,{children:["The language for static table data (default: ",(0,n.jsx)(t.code,{children:"DataLanguage.id"}),")."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"page"})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"int"})}),(0,n.jsxs)(t.td,{children:["The page number (default: ",(0,n.jsx)(t.code,{children:"1"}),")."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"keyword"})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"String?"})}),(0,n.jsx)(t.td,{children:"A keyword for searching static tables (optional)."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"month"})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"int?"})}),(0,n.jsxs)(t.td,{children:["The month for filtering static tables (optional - ",(0,n.jsx)(t.code,{children:"1..12"}),")."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"year"})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"int?"})}),(0,n.jsx)(t.td,{children:"The year for filtering static tables (optional)."})]})]})]}),"\n",(0,n.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,n.jsx)(t.p,{children:"Example usage and sample output:"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"Preview",src:i(9341).A+"",width:"296",height:"640"})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-dart",children:"// Fetch static table data from BPS API\nfinal staticTableResult = await StadataFlutter.instance.list.staticTable(\n  domain: 'example_domain_code', // Replace with the desired domain code\n  lang: DataLanguage.id,\n  page: 1,\n  keyword: 'example_keyword', // Replace with desired keyword or null\n  month: null, // Replace with desired month or null\n  year: null, // Replace with desired year or null\n);\n\nfinal staticTableList = staticTableResult.data;\nfinal pagination = staticTableResult.pagination;\n\n// Print pagination info\nprint('Current Page: ${pagination.page}');\nprint('Total Pages: ${pagination.pages}');\nprint('Data Count in This Page: ${pagination.count}');\nprint('Per Page: ${pagination.perPage}');\nprint('Total: ${pagination.total}');\nprint('------------------------');\n\n// Print the retrieved static table data\nfor (final staticTable in staticTableList) {\n    print('Table ID: ${staticTable.id}');\n    print('Table Title: ${staticTable.title}');\n    print('Subject ID: ${staticTable.subjectId}');\n    print('Subject: ${staticTable.subject}');\n    print('Size: ${staticTable.size}');\n    print('Table: ${staticTable.table}');\n    print('Updated At: ${staticTable.updatedAt}');\n    print('Created At: ${staticTable.createdAt}');\n    print('Excel Link: ${staticTable.excel}');\n}\n\n"})}),"\n",(0,n.jsx)(t.h2,{id:"properties-statictable",children:"Properties (StaticTable)"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Property"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"id"})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"int"})}),(0,n.jsx)(t.td,{children:"The unique identifier of the table."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"title"})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"String"})}),(0,n.jsx)(t.td,{children:"The title or name of the table."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"subjectId"})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"int"})}),(0,n.jsx)(t.td,{children:"The optional subject identifier associated with the table."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"subject"})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"String?"})}),(0,n.jsx)(t.td,{children:"The optional subject name or description."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"size"})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"String"})}),(0,n.jsx)(t.td,{children:"The file size."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"table"})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"String?"})}),(0,n.jsx)(t.td,{children:"The HTML representation of the table."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"updatedAt"})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"DateTime"})}),(0,n.jsx)(t.td,{children:"The date and time when the table was last updated."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"createdAt"})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"DateTime?"})}),(0,n.jsx)(t.td,{children:"The optional date and time when the table was created."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"excel"})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"String"})}),(0,n.jsx)(t.td,{children:"A link or reference to the associated Excel file for the table."})]})]})]})]})}function o(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}},9341:(e,t,i)=>{i.d(t,{A:()=>n});const n=i.p+"assets/images/static_tables-90a9349498e63e565eb4ee700f4ee25b.gif"},8453:(e,t,i)=>{i.d(t,{R:()=>a,x:()=>r});var n=i(6540);const s={},d=n.createContext(s);function a(e){const t=n.useContext(d);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),n.createElement(d.Provider,{value:t},e.children)}}}]);