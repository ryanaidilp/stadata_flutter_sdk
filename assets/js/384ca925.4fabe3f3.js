"use strict";(self.webpackChunkstadata_flutter_sdk=self.webpackChunkstadata_flutter_sdk||[]).push([[8908],{3787:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>l,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"usage/list","title":"List","description":"The list property returns a ListResult class, which includes two main properties:","source":"@site/versioned_docs/version-0.8.0/usage/list.md","sourceDirName":"usage","slug":"/usage/list","permalink":"/stadata_flutter_sdk/docs/0.8.0/usage/list","draft":false,"unlisted":false,"editUrl":"https://github.com/ryanaidilp/stadata_flutter_sdk/tree/main/docs/versioned_docs/version-0.8.0/usage/list.md","tags":[],"version":"0.8.0","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Enums","permalink":"/stadata_flutter_sdk/docs/0.8.0/usage/enums"},"next":{"title":"View API Usage Guide","permalink":"/stadata_flutter_sdk/docs/0.8.0/usage/view"}}');var a=n(4848),i=n(8453);const l={},r="List",c={},d=[{value:"Census Data Examples",id:"census-data-examples",level:2}];function o(e){const s={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.header,{children:(0,a.jsx)(s.h1,{id:"list",children:"List"})}),"\n",(0,a.jsxs)(s.p,{children:["The ",(0,a.jsx)(s.code,{children:"list"})," property returns a ",(0,a.jsx)(s.code,{children:"ListResult"})," class, which includes two main properties:"]}),"\n",(0,a.jsxs)(s.ol,{children:["\n",(0,a.jsxs)(s.li,{children:["\n",(0,a.jsx)(s.p,{children:(0,a.jsx)(s.strong,{children:"Data Property:"})}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:["The ",(0,a.jsx)(s.code,{children:"data"})," property contains a list of data based on the specified type. For instance, if you are fetching publications, the data will be of type ",(0,a.jsx)(s.code,{children:"List<Publication>"}),"."]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(s.li,{children:["\n",(0,a.jsx)(s.p,{children:(0,a.jsx)(s.strong,{children:"Pagination Property:"})}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:["The ",(0,a.jsx)(s.code,{children:"pagination"})," property is an instance of the ",(0,a.jsx)(s.code,{children:"Pagination"})," entity, which provides information related to pagination. It includes the following properties:","\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.code,{children:"page"}),": The current page."]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.code,{children:"pages"}),": The total number of pages."]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.code,{children:"count"}),": The count of data entries on the current page."]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.code,{children:"perPage"}),": The number of entries per page."]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.code,{children:"total"}),": The total number of data entries."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(s.li,{children:["\n",(0,a.jsx)(s.p,{children:(0,a.jsx)(s.strong,{children:"Data Availability Property:"})}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:["The ",(0,a.jsx)(s.code,{children:"dataAvailability"})," property is an enum from ",(0,a.jsx)(s.code,{children:"DataAvailability"})," enum, which provides information related to data availability. It includes the following values:","\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.code,{children:"DataAvailability.available"}),": Indicating data is available."]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.code,{children:"DataAvailability.listUnavailable"}),": Indicating the requested list not available."]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.code,{children:"DataAvailability.unavailable"}),": Indicating the requested data not available."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(s.p,{children:"To retrieve a list of models, follow these steps:"}),"\n",(0,a.jsxs)(s.ol,{children:["\n",(0,a.jsxs)(s.li,{children:["\n",(0,a.jsxs)(s.p,{children:["Create an instance of ",(0,a.jsx)(s.code,{children:"StadataFlutter"}),"."]}),"\n"]}),"\n",(0,a.jsxs)(s.li,{children:["\n",(0,a.jsxs)(s.p,{children:["Access the ",(0,a.jsx)(s.code,{children:"list"})," getter from the instance, granting you access to various models from domains, publications, press releases, census data, and more."]}),"\n"]}),"\n",(0,a.jsxs)(s.li,{children:["\n",(0,a.jsxs)(s.p,{children:["Use the ",(0,a.jsx)(s.code,{children:"list"})," method with the desired parameters. For example:"]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-dart",children:"// Fetch publications for a specific domain\nvar publicationsResult = await StadataFlutter.instance.list.publications(domain: '7200');\n\n// Fetch census data (NEW FEATURE!)\nvar censusResult = await StadataFlutter.instance.list.census();\n\n// Fetch census topics for Population Census 2020\nvar topicsResult = await StadataFlutter.instance.list.censusTopics(censusID: 'sp2020');\n\n// Fetch census datasets for a specific topic\nvar datasetsResult = await StadataFlutter.instance.list.censusEventDatasets(\n  censusID: 'sp2020',\n  topicID: 20,\n);\n"})}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(s.p,{children:["This call will provide you with a ",(0,a.jsx)(s.code,{children:"ListResult"})," containing data of the appropriate type and pagination information for further navigation."]}),"\n",(0,a.jsx)(s.h2,{id:"census-data-examples",children:"Census Data Examples"}),"\n",(0,a.jsx)(s.p,{children:"The SDK now supports comprehensive census data access:"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-dart",children:"// 1. Get all available census types\nfinal censusTypes = await StadataFlutter.instance.list.census();\nprint('Available census types: ${censusTypes.data.length}');\n\n// 2. Get topics for a specific census\nfinal topics = await StadataFlutter.instance.list.censusTopics(\n  censusID: 'sp2020', // Population Census 2020\n);\nprint('Topics available: ${topics.data.length}');\n\n// 3. Get geographical areas for a census\nfinal areas = await StadataFlutter.instance.list.censusEventAreas(\n  censusID: 'sp2020',\n);\nprint('Areas with data: ${areas.data.length}');\n\n// 4. Get actual datasets\nfinal datasets = await StadataFlutter.instance.list.censusEventDatasets(\n  censusID: 'sp2020',\n  topicID: 20, // Demographics topic\n);\nprint('Available datasets: ${datasets.data.length}');\n"})})]})}function u(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(o,{...e})}):o(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>l,x:()=>r});var t=n(6540);const a={},i=t.createContext(a);function l(e){const s=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function r(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),t.createElement(i.Provider,{value:s},e.children)}}}]);