"use strict";(self.webpackChunkstadata_flutter_sdk=self.webpackChunkstadata_flutter_sdk||[]).push([[7887],{5765:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>r,toc:()=>l});var t=i(4848),d=i(8453);const s={},a="Domains",r={id:"api-docs/list/domains",title:"Domains",description:"This method is used to retrieve a list of domains (regions) available in the BPS data.",source:"@site/versioned_docs/version-0.6.3/api-docs/list/domains.md",sourceDirName:"api-docs/list",slug:"/api-docs/list/domains",permalink:"/stadata_flutter_sdk/docs/0.6.3/api-docs/list/domains",draft:!1,unlisted:!1,editUrl:"https://github.com/ryanaidilp/stadata_flutter_sdk/tree/main/docs/versioned_docs/version-0.6.3/api-docs/list/domains.md",tags:[],version:"0.6.3",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Intro",permalink:"/stadata_flutter_sdk/docs/0.6.3/api-docs/list/intro"},next:{title:"Infographics",permalink:"/stadata_flutter_sdk/docs/0.6.3/api-docs/list/infographics"}},o={},l=[{value:"Parameters",id:"parameters",level:2},{value:"Example",id:"example",level:2},{value:"Properties (DomainEntity)",id:"properties-domainentity",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",img:"img",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,d.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"domains",children:"Domains"}),"\n",(0,t.jsx)(n.p,{children:"This method is used to retrieve a list of domains (regions) available in the BPS data."}),"\n",(0,t.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Parameter"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"type"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"DomainType"})}),(0,t.jsxs)(n.td,{children:["The type of domain to retrieve (default: ",(0,t.jsx)(n.code,{children:"DomainType.all"}),")."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"provinceCode"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"String?"})}),(0,t.jsxs)(n.td,{children:["The province code for filtering domains (required if ",(0,t.jsx)(n.code,{children:"type"})," = ",(0,t.jsx)(n.code,{children:"DomainType.regencyByProvince"}),")."]})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,t.jsx)(n.p,{children:"Example usage and sample output:"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"Preview",src:i(5108).A+"",width:"296",height:"640"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-dart",children:"// Fetch domain data from BPS API\nfinal domainResult = await StadataFlutter.instance.list.domains(\n  type: DomainType.all,\n  provinceCode: null, // Replace with the desired province code if needed\n);\n\nfinal domainList = domainResult.data;\nfinal pagination = domainResult.pagination;\n\n// Print pagination info\nprint('Current Page: ${pagination.page}');\nprint('Total Pages: ${pagination.pages}');\nprint('Data Count in This Page: ${pagination.count}');\nprint('Per Page: ${pagination.perPage}');\nprint('Total: ${pagination.total}');\nprint('------------------------');\n\n// Print the retrieved domain data\nfor (final domain in domainList) {\n  print('Domain ID: ${domain.id}'); /// Ex. 7200\n  print('Name: ${domain.name}'); /// Sulawesi Tengah\n  print('URL: ${domain.url}'); /// https://sultengprov.bps.go.id\n  print('------------------------');\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"properties-domainentity",children:"Properties (DomainEntity)"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Property"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"name"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"String"})}),(0,t.jsx)(n.td,{children:"The name of the domain (region)."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"id"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"String"})}),(0,t.jsx)(n.td,{children:"Unique identifier for the domain."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"url"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"String"})}),(0,t.jsx)(n.td,{children:"URL associated with the domain."})]})]})]})]})}function h(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},5108:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/domains-5c76954836b658285191a28a474762b4.gif"},8453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>r});var t=i(6540);const d={},s=t.createContext(d);function a(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:a(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);