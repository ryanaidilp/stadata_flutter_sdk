"use strict";(self.webpackChunkstadata_flutter_sdk=self.webpackChunkstadata_flutter_sdk||[]).push([[3408],{7952:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>l,contentTitle:()=>s,default:()=>o,frontMatter:()=>d,metadata:()=>a,toc:()=>c});var r=t(5893),n=t(1151);const d={},s="Variables",a={id:"api-docs/list/variables",title:"Variables",description:"This method is used to retrieve a list of variables based on the selected domain (region).",source:"@site/docs/api-docs/list/variables.md",sourceDirName:"api-docs/list",slug:"/api-docs/list/variables",permalink:"/stadata_flutter_sdk/docs/api-docs/list/variables",draft:!1,unlisted:!1,editUrl:"https://github.com/ryanaidilp/stadata_flutter_sdk/tree/main/docs/docs/api-docs/list/variables.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Units",permalink:"/stadata_flutter_sdk/docs/api-docs/list/units"},next:{title:"Vertical Variables",permalink:"/stadata_flutter_sdk/docs/api-docs/list/vertical-variables"}},l={},c=[{value:"Parameters",id:"parameters",level:2},{value:"Examples",id:"examples",level:2},{value:"Properties (Variable)",id:"properties-variable",level:2}];function h(e){const i={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,n.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.h1,{id:"variables",children:"Variables"}),"\n",(0,r.jsx)(i.p,{children:"This method is used to retrieve a list of variables based on the selected domain (region)."}),"\n",(0,r.jsx)(i.h2,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsxs)(i.table,{children:[(0,r.jsx)(i.thead,{children:(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.th,{children:"Parameter"}),(0,r.jsx)(i.th,{children:"Type"}),(0,r.jsx)(i.th,{children:"Description"})]})}),(0,r.jsxs)(i.tbody,{children:[(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"domain"})}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"String"})}),(0,r.jsx)(i.td,{children:"Domain code (region) to retrieve variables."})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"lang"})}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"DataLanguage"})}),(0,r.jsxs)(i.td,{children:["Language for variables data (default: ",(0,r.jsx)(i.code,{children:"DataLanguage.id"}),")."]})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"page"})}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"int"})}),(0,r.jsxs)(i.td,{children:["Page number (default: ",(0,r.jsx)(i.code,{children:"1"}),")."]})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"subjectID"})}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"int?"})}),(0,r.jsx)(i.td,{children:"Variable ID of the variables (optional)."})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"showExistingVariable"})}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"bool"})}),(0,r.jsxs)(i.td,{children:["A boolean flag to determine whether to only show variables that have values for the specified domain. When set to ",(0,r.jsx)(i.code,{children:"true"}),", the function translates this to the ",(0,r.jsx)(i.code,{children:"area"})," query parameter with a value of 1, filtering the variables to include only those that have existing values in the domain (default: ",(0,r.jsx)(i.code,{children:"false"}),")"]})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"year"})}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"int?"})}),(0,r.jsx)(i.td,{children:"(Optional) The specific year for which variables are being requested."})]})]})]}),"\n",(0,r.jsx)(i.h2,{id:"examples",children:"Examples"}),"\n",(0,r.jsx)(i.p,{children:"Example usage and output:"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-dart",children:"// Fetch variables data from BPS\nfinal result = await StadataFlutter.instance.list.variables(\n  domain: 'example_domain_code', // Replace with the desired domain code\n  lang: DataLanguage.id,\n  page: 1,\n  showExistingVariable: false,\n  year: 2020,\n  subjectID: 'example_subject_id', // Replace with the desired subject ID or null\n);\n\nfinal variables = result.data;\nfinal pagination = result.pagination;\n\n// Print page information\nprint('Current page: ${pagination.page}');\nprint('Total Pages: ${pagination.pages}');\nprint('Total Data in This Page: ${pagination.count}');\nprint('PerPage: ${pagination.perPage}');\nprint('Total: ${pagination.total}');\nprint('------------------------');\n\n// Print retrieved variables data\nfor (final variable in variables) {\n    print('Variable ID: ${unit.id}');\n    print('Title: ${unit.title}');\n    print('Subject ID: ${unit.subjectID}');\n    print('Subject Name: ${unit.subjectName}');\n    print('Vertical Variable ID: ${unit.verticalVariableID}');\n    print('CSA Subject Name: ${unit.csaSubjectName}');\n    print('Graph Name: ${unit.graphName}');\n    print('Notes: ${unit.notes}');\n    print('Unit: ${unit.unit}');\n    print('Type: ${unit.type}');\n    print('Derived Period ID: ${unit.derivedPeriodID}');\n    print('Derived Variable ID: ${unit.derivedVariableID}');\n}\n"})}),"\n",(0,r.jsx)(i.h2,{id:"properties-variable",children:"Properties (Variable)"}),"\n",(0,r.jsxs)(i.table,{children:[(0,r.jsx)(i.thead,{children:(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.th,{children:"Property"}),(0,r.jsx)(i.th,{children:"Type"}),(0,r.jsx)(i.th,{children:"Description"})]})}),(0,r.jsxs)(i.tbody,{children:[(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"id"})}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"int"})}),(0,r.jsx)(i.td,{children:"The unique identifier for the Variable."})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"title"})}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"String"})}),(0,r.jsx)(i.td,{children:"The official title or label of the variable"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"subjectID"})}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"int"})}),(0,r.jsx)(i.td,{children:"An identifier for the sub-category of the variable."})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"subjectName"})}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"String"})}),(0,r.jsx)(i.td,{children:"The name of the subject to which the variable belongs."})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"verticalVariableID"})}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"int"})}),(0,r.jsx)(i.td,{children:"An identifier for the vertical variable."})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"csaSubjectName"})}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"String?"})}),(0,r.jsx)(i.td,{children:"The name of the cross-sectional subject related to the variable, if applicable."})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"graphName"})}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"String"})}),(0,r.jsx)(i.td,{children:"A descriptive name used for graphing purposes."})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"notes"})}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"String"})}),(0,r.jsx)(i.td,{children:"Additional notes or descriptions about the variable."})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"unit"})}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"String"})}),(0,r.jsx)(i.td,{children:"The measurement unit of the variable."})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"type"})}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"int?"})}),(0,r.jsx)(i.td,{children:"The type of the variable, if applicable."})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"derivedPeriodID"})}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"int?"})}),(0,r.jsx)(i.td,{children:"The identifier for the derived period, if applicable."})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"derivedVariableID"})}),(0,r.jsx)(i.td,{children:(0,r.jsx)(i.code,{children:"int?"})}),(0,r.jsx)(i.td,{children:"The identifier for the derived variable, if applicable."})]})]})]})]})}function o(e={}){const{wrapper:i}={...(0,n.a)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},1151:(e,i,t)=>{t.d(i,{Z:()=>a,a:()=>s});var r=t(7294);const n={},d=r.createContext(n);function s(e){const i=r.useContext(d);return r.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:s(e.components),r.createElement(d.Provider,{value:i},e.children)}}}]);