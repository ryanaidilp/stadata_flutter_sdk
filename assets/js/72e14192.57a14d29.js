"use strict";(self.webpackChunkstadata_flutter_sdk=self.webpackChunkstadata_flutter_sdk||[]).push([[2814],{1953:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"quick-start","title":"Quick Start","description":"Get started with the STADATA Flutter SDK in minutes! This comprehensive guide will walk you through setting up the SDK, obtaining your API key, and implementing your first statistical data integration with BPS (Badan Pusat Statistik) Indonesia.","source":"@site/docs/quick-start.md","sourceDirName":".","slug":"/quick-start","permalink":"/stadata_flutter_sdk/docs/quick-start","draft":false,"unlisted":false,"editUrl":"https://github.com/ryanaidilp/stadata_flutter_sdk/tree/main/docs/docs/quick-start.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Getting Started","permalink":"/stadata_flutter_sdk/docs/intro"},"next":{"title":"Try the Example","permalink":"/stadata_flutter_sdk/docs/try-the-example"}}');var a=t(4848),s=t(8453);const o={sidebar_position:2},r="Quick Start",l={},d=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Verify Your Flutter Installation",id:"verify-your-flutter-installation",level:3},{value:"Step 1: API Key Registration",id:"step-1-api-key-registration",level:2},{value:"Step 2: Installation",id:"step-2-installation",level:2},{value:"Option A: Add via pubspec.yaml",id:"option-a-add-via-pubspecyaml",level:3},{value:"Option B: Add via Command Line",id:"option-b-add-via-command-line",level:3},{value:"Install Dependencies",id:"install-dependencies",level:3},{value:"Step 3: SDK Initialization",id:"step-3-sdk-initialization",level:2},{value:"Basic Initialization",id:"basic-initialization",level:3},{value:"Secure API Key Management",id:"secure-api-key-management",level:3},{value:"Step 4: Your First Implementation",id:"step-4-your-first-implementation",level:2},{value:"Complete Example: Indonesian Domains Explorer",id:"complete-example-indonesian-domains-explorer",level:3},{value:"Step 5: Exploring SDK Features",id:"step-5-exploring-sdk-features",level:2},{value:"List API - Data Discovery",id:"list-api---data-discovery",level:3},{value:"View API - Detailed Information",id:"view-api---detailed-information",level:3},{value:"Error Handling Best Practices",id:"error-handling-best-practices",level:3},{value:"Next Steps",id:"next-steps",level:2},{value:"\ud83d\udcda Deep Dive into Documentation",id:"-deep-dive-into-documentation",level:3},{value:"\ud83d\udee0 Advanced Implementation",id:"-advanced-implementation",level:3},{value:"\ud83d\udcf1 Example Application",id:"-example-application",level:3},{value:"\ud83d\udd27 SDK Configuration",id:"-sdk-configuration",level:3},{value:"\ud83d\ude80 Production Checklist",id:"-production-checklist",level:3},{value:"Support and Resources",id:"support-and-resources",level:2}];function c(n){const e={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",input:"input",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.header,{children:(0,a.jsx)(e.h1,{id:"quick-start",children:"Quick Start"})}),"\n",(0,a.jsx)(e.p,{children:"Get started with the STADATA Flutter SDK in minutes! This comprehensive guide will walk you through setting up the SDK, obtaining your API key, and implementing your first statistical data integration with BPS (Badan Pusat Statistik) Indonesia."}),"\n",(0,a.jsx)(e.p,{children:"The STADATA Flutter SDK provides seamless access to Indonesia's official statistical data, enabling you to integrate economic indicators, demographic data, publications, news, and more into your Flutter applications with just a few lines of code."}),"\n",(0,a.jsx)(e.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,a.jsx)(e.p,{children:"Before getting started, ensure your development environment meets these requirements:"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Flutter SDK"}),": Version 3.7.0 or higher"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Dart SDK"}),": Version 2.19.0 or higher"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Platform Support"}),": Android, iOS, Web, Desktop (Windows, macOS, Linux)"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"API Key"}),": Valid API key from ",(0,a.jsx)(e.a,{href:"https://webapi.bps.go.id/developer/",children:"BPS Web API"})]}),"\n"]}),"\n",(0,a.jsx)(e.h3,{id:"verify-your-flutter-installation",children:"Verify Your Flutter Installation"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-bash",children:"# Check Flutter version\nflutter --version\n\n# Verify Flutter installation\nflutter doctor\n"})}),"\n",(0,a.jsx)(e.h2,{id:"step-1-api-key-registration",children:"Step 1: API Key Registration"}),"\n",(0,a.jsx)(e.p,{children:"Before using the SDK, you'll need to register for a free API key from BPS:"}),"\n",(0,a.jsxs)(e.ol,{children:["\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Visit the BPS Developer Portal"}),": ",(0,a.jsx)(e.a,{href:"https://webapi.bps.go.id/developer/",children:"https://webapi.bps.go.id/developer/"})]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Create an Account"}),": Register with your email and complete verification"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Generate API Key"}),": Navigate to your dashboard and create a new API key"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Note the Key"}),": Save your API key securely - you'll need it for initialization"]}),"\n"]}),"\n",(0,a.jsx)(e.admonition,{title:"API Key Best Practices",type:"tip",children:(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:"Store your API key securely using environment variables or Flutter's secure storage"}),"\n",(0,a.jsx)(e.li,{children:"Never commit API keys to version control"}),"\n",(0,a.jsx)(e.li,{children:"Use different API keys for development, staging, and production environments"}),"\n",(0,a.jsx)(e.li,{children:"Monitor your API usage through the BPS developer dashboard"}),"\n"]})}),"\n",(0,a.jsx)(e.h2,{id:"step-2-installation",children:"Step 2: Installation"}),"\n",(0,a.jsx)(e.h3,{id:"option-a-add-via-pubspecyaml",children:"Option A: Add via pubspec.yaml"}),"\n",(0,a.jsxs)(e.p,{children:["Add the STADATA Flutter SDK to your ",(0,a.jsx)(e.code,{children:"pubspec.yaml"})," dependencies:"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-yaml",children:"dependencies:\n  flutter:\n    sdk: flutter\n  stadata_flutter_sdk: ^latest_version\n"})}),"\n",(0,a.jsxs)(e.p,{children:["Replace ",(0,a.jsx)(e.code,{children:"^latest_version"})," with the actual latest version from ",(0,a.jsx)(e.a,{href:"https://pub.dev/packages/stadata_flutter_sdk",children:"pub.dev"}),"."]}),"\n",(0,a.jsx)(e.h3,{id:"option-b-add-via-command-line",children:"Option B: Add via Command Line"}),"\n",(0,a.jsx)(e.p,{children:"Use Flutter's pub command to add the dependency automatically:"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-bash",children:"flutter pub add stadata_flutter_sdk\n"})}),"\n",(0,a.jsx)(e.h3,{id:"install-dependencies",children:"Install Dependencies"}),"\n",(0,a.jsx)(e.p,{children:"Fetch and install the SDK package:"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-bash",children:"flutter pub get\n"})}),"\n",(0,a.jsx)(e.h2,{id:"step-3-sdk-initialization",children:"Step 3: SDK Initialization"}),"\n",(0,a.jsx)(e.p,{children:"Initialize the STADATA Flutter SDK in your application's entry point. This should be done before running your app."}),"\n",(0,a.jsx)(e.h3,{id:"basic-initialization",children:"Basic Initialization"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-dart",children:"import 'package:flutter/material.dart';\nimport 'package:stadata_flutter_sdk/stadata_flutter_sdk.dart';\n\nvoid main() async {\n  // Ensure Flutter binding is initialized\n  WidgetsFlutterBinding.ensureInitialized();\n\n  // Initialize the STADATA Flutter SDK\n  await StadataFlutter.instance.init(\n    apiKey: 'YOUR_API_KEY_HERE',\n  );\n\n  // Launch your application\n  runApp(const MyApp());\n}\n\nclass MyApp extends StatelessWidget {\n  const MyApp({super.key});\n\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      title: 'STADATA Flutter Demo',\n      theme: ThemeData(\n        primarySwatch: Colors.blue,\n        useMaterial3: true,\n      ),\n      home: const StatisticalDataScreen(),\n    );\n  }\n}\n"})}),"\n",(0,a.jsx)(e.h3,{id:"secure-api-key-management",children:"Secure API Key Management"}),"\n",(0,a.jsx)(e.p,{children:"For production applications, use secure storage for your API key:"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-dart",children:"import 'package:flutter/material.dart';\nimport 'package:flutter/services.dart';\nimport 'package:stadata_flutter_sdk/stadata_flutter_sdk.dart';\n\nvoid main() async {\n  WidgetsFlutterBinding.ensureInitialized();\n\n  try {\n    // Load API key from secure storage or environment\n    const apiKey = String.fromEnvironment(\n      'BPS_API_KEY',\n      defaultValue: '', // Never use actual key as default\n    );\n\n    if (apiKey.isEmpty) {\n      throw Exception('BPS API Key not found. Please check your configuration.');\n    }\n\n    // Initialize with secure API key\n    await StadataFlutter.instance.init(apiKey: apiKey);\n\n    runApp(const MyApp());\n  } catch (e) {\n    // Handle initialization errors gracefully\n    runApp(ErrorApp(error: e.toString()));\n  }\n}\n\nclass ErrorApp extends StatelessWidget {\n  final String error;\n\n  const ErrorApp({super.key, required this.error});\n\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      home: Scaffold(\n        body: Center(\n          child: Column(\n            mainAxisAlignment: MainAxisAlignment.center,\n            children: [\n              const Icon(Icons.error_outline, size: 64, color: Colors.red),\n              const SizedBox(height: 16),\n              const Text('Initialization Error', style: TextStyle(fontSize: 24, fontWeight: FontWeight.bold)),\n              const SizedBox(height: 8),\n              Text(error, textAlign: TextAlign.center),\n            ],\n          ),\n        ),\n      ),\n    );\n  }\n}\n"})}),"\n",(0,a.jsx)(e.admonition,{title:"Critical Initialization Steps",type:"caution",children:(0,a.jsxs)(e.ol,{children:["\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Always call"})," ",(0,a.jsx)(e.code,{children:"WidgetsFlutterBinding.ensureInitialized()"})," before SDK initialization"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Initialize the SDK"})," before calling ",(0,a.jsx)(e.code,{children:"runApp()"})]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Handle initialization errors"})," gracefully to prevent app crashes"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Validate your API key"})," before initialization to catch configuration issues early"]}),"\n"]})}),"\n",(0,a.jsx)(e.h2,{id:"step-4-your-first-implementation",children:"Step 4: Your First Implementation"}),"\n",(0,a.jsx)(e.p,{children:"Now let's implement a complete example that demonstrates the core functionality of the STADATA Flutter SDK."}),"\n",(0,a.jsx)(e.h3,{id:"complete-example-indonesian-domains-explorer",children:"Complete Example: Indonesian Domains Explorer"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-dart",children:"import 'package:flutter/material.dart';\nimport 'package:stadata_flutter_sdk/stadata_flutter_sdk.dart';\n\nclass StatisticalDataScreen extends StatefulWidget {\n  const StatisticalDataScreen({super.key});\n\n  @override\n  State<StatisticalDataScreen> createState() => _StatisticalDataScreenState();\n}\n\nclass _StatisticalDataScreenState extends State<StatisticalDataScreen> {\n  List<Domain> domains = [];\n  bool isLoading = false;\n  String? errorMessage;\n\n  @override\n  void initState() {\n    super.initState();\n    _loadDomains();\n  }\n\n  Future<void> _loadDomains() async {\n    setState(() {\n      isLoading = true;\n      errorMessage = null;\n    });\n\n    try {\n      // Fetch Indonesian administrative domains\n      final result = await StadataFlutter.instance.list.domains(\n        type: DomainType.all,\n        lang: DataLanguage.id,\n      );\n\n      setState(() {\n        domains = result.data;\n        isLoading = false;\n      });\n    } catch (e) {\n      setState(() {\n        errorMessage = 'Failed to load domains: $e';\n        isLoading = false;\n      });\n    }\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(\n        title: const Text('Indonesian Administrative Domains'),\n        backgroundColor: Theme.of(context).colorScheme.inversePrimary,\n        actions: [\n          IconButton(\n            icon: const Icon(Icons.refresh),\n            onPressed: _loadDomains,\n            tooltip: 'Refresh Data',\n          ),\n        ],\n      ),\n      body: _buildBody(),\n    );\n  }\n\n  Widget _buildBody() {\n    if (isLoading) {\n      return const Center(\n        child: Column(\n          mainAxisAlignment: MainAxisAlignment.center,\n          children: [\n            CircularProgressIndicator(),\n            SizedBox(height: 16),\n            Text('Loading Indonesian domains...'),\n          ],\n        ),\n      );\n    }\n\n    if (errorMessage != null) {\n      return Center(\n        child: Column(\n          mainAxisAlignment: MainAxisAlignment.center,\n          children: [\n            const Icon(Icons.error_outline, size: 64, color: Colors.red),\n            const SizedBox(height: 16),\n            Text(\n              'Error Loading Data',\n              style: Theme.of(context).textTheme.headlineSmall,\n            ),\n            const SizedBox(height: 8),\n            Text(\n              errorMessage!,\n              textAlign: TextAlign.center,\n              style: const TextStyle(color: Colors.grey),\n            ),\n            const SizedBox(height: 16),\n            ElevatedButton.icon(\n              onPressed: _loadDomains,\n              icon: const Icon(Icons.refresh),\n              label: const Text('Retry'),\n            ),\n          ],\n        ),\n      );\n    }\n\n    if (domains.isEmpty) {\n      return const Center(\n        child: Column(\n          mainAxisAlignment: MainAxisAlignment.center,\n          children: [\n            Icon(Icons.location_off, size: 64, color: Colors.grey),\n            SizedBox(height: 16),\n            Text('No domains found'),\n          ],\n        ),\n      );\n    }\n\n    return Column(\n      children: [\n        // Summary header\n        Container(\n          width: double.infinity,\n          padding: const EdgeInsets.all(16),\n          color: Theme.of(context).colorScheme.surfaceVariant,\n          child: Column(\n            crossAxisAlignment: CrossAxisAlignment.start,\n            children: [\n              Text(\n                'Administrative Domains',\n                style: Theme.of(context).textTheme.titleLarge,\n              ),\n              const SizedBox(height: 4),\n              Text(\n                '${domains.length} domains available',\n                style: Theme.of(context).textTheme.bodyMedium,\n              ),\n            ],\n          ),\n        ),\n        // Domains list\n        Expanded(\n          child: ListView.builder(\n            itemCount: domains.length,\n            itemBuilder: (context, index) {\n              final domain = domains[index];\n              return _buildDomainCard(domain);\n            },\n          ),\n        ),\n      ],\n    );\n  }\n\n  Widget _buildDomainCard(Domain domain) {\n    return Card(\n      margin: const EdgeInsets.symmetric(horizontal: 16, vertical: 4),\n      child: ListTile(\n        leading: CircleAvatar(\n          backgroundColor: Theme.of(context).colorScheme.primary,\n          child: Text(\n            domain.id.length >= 2 ? domain.id.substring(0, 2) : domain.id,\n            style: const TextStyle(\n              color: Colors.white,\n              fontWeight: FontWeight.bold,\n            ),\n          ),\n        ),\n        title: Text(\n          domain.name,\n          style: const TextStyle(fontWeight: FontWeight.w500),\n        ),\n        subtitle: Column(\n          crossAxisAlignment: CrossAxisAlignment.start,\n          children: [\n            Text('Domain ID: ${domain.id}'),\n            Text('URL: ${domain.url}'),\n          ],\n        ),\n        trailing: IconButton(\n          icon: const Icon(Icons.info_outline),\n          onPressed: () => _showDomainDetails(domain),\n        ),\n        onTap: () => _showDomainDetails(domain),\n      ),\n    );\n  }\n\n  void _showDomainDetails(Domain domain) {\n    showDialog(\n      context: context,\n      builder: (context) => AlertDialog(\n        title: Text(domain.name),\n        content: Column(\n          mainAxisSize: MainAxisSize.min,\n          crossAxisAlignment: CrossAxisAlignment.start,\n          children: [\n            _buildDetailRow('Domain ID', domain.id),\n            _buildDetailRow('Name', domain.name),\n            _buildDetailRow('URL', domain.url),\n          ],\n        ),\n        actions: [\n          TextButton(\n            onPressed: () => Navigator.of(context).pop(),\n            child: const Text('Close'),\n          ),\n          ElevatedButton(\n            onPressed: () {\n              Navigator.of(context).pop();\n              _exploreData(domain);\n            },\n            child: const Text('Explore Data'),\n          ),\n        ],\n      ),\n    );\n  }\n\n  Widget _buildDetailRow(String label, String value) {\n    return Padding(\n      padding: const EdgeInsets.symmetric(vertical: 4),\n      child: Row(\n        crossAxisAlignment: CrossAxisAlignment.start,\n        children: [\n          Text(\n            '$label: ',\n            style: const TextStyle(fontWeight: FontWeight.bold),\n          ),\n          Expanded(\n            child: Text(value),\n          ),\n        ],\n      ),\n    );\n  }\n\n  void _exploreData(Domain domain) {\n    Navigator.of(context).push(\n      MaterialPageRoute(\n        builder: (context) => DomainDataExplorer(domain: domain),\n      ),\n    );\n  }\n}\n\n// Additional screen for exploring domain-specific data\nclass DomainDataExplorer extends StatefulWidget {\n  final Domain domain;\n\n  const DomainDataExplorer({super.key, required this.domain});\n\n  @override\n  State<DomainDataExplorer> createState() => _DomainDataExplorerState();\n}\n\nclass _DomainDataExplorerState extends State<DomainDataExplorer> {\n  int publicationCount = 0;\n  int newsCount = 0;\n  bool isLoading = true;\n\n  @override\n  void initState() {\n    super.initState();\n    _loadDomainData();\n  }\n\n  Future<void> _loadDomainData() async {\n    try {\n      // Load publications and news for this domain\n      final [publications, news] = await Future.wait([\n        StadataFlutter.instance.list.publications(domain: widget.domain.id),\n        StadataFlutter.instance.list.news(domain: widget.domain.id),\n      ]);\n\n      setState(() {\n        publicationCount = publications.data.length;\n        newsCount = news.data.length;\n        isLoading = false;\n      });\n    } catch (e) {\n      setState(() {\n        isLoading = false;\n      });\n      if (mounted) {\n        ScaffoldMessenger.of(context).showSnackBar(\n          SnackBar(content: Text('Error loading domain data: $e')),\n        );\n      }\n    }\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(\n        title: Text(widget.domain.name),\n        backgroundColor: Theme.of(context).colorScheme.inversePrimary,\n      ),\n      body: isLoading\n          ? const Center(child: CircularProgressIndicator())\n          : Padding(\n              padding: const EdgeInsets.all(16),\n              child: Column(\n                crossAxisAlignment: CrossAxisAlignment.start,\n                children: [\n                  Card(\n                    child: Padding(\n                      padding: const EdgeInsets.all(16),\n                      child: Column(\n                        crossAxisAlignment: CrossAxisAlignment.start,\n                        children: [\n                          Text(\n                            'Domain Information',\n                            style: Theme.of(context).textTheme.titleLarge,\n                          ),\n                          const SizedBox(height: 12),\n                          _buildInfoRow('ID', widget.domain.id),\n                          _buildInfoRow('Name', widget.domain.name),\n                          _buildInfoRow('URL', widget.domain.url),\n                        ],\n                      ),\n                    ),\n                  ),\n                  const SizedBox(height: 16),\n                  Card(\n                    child: Padding(\n                      padding: const EdgeInsets.all(16),\n                      child: Column(\n                        crossAxisAlignment: CrossAxisAlignment.start,\n                        children: [\n                          Text(\n                            'Available Data',\n                            style: Theme.of(context).textTheme.titleLarge,\n                          ),\n                          const SizedBox(height: 12),\n                          _buildDataRow(\n                            'Publications',\n                            publicationCount,\n                            Icons.book,\n                            Colors.blue,\n                          ),\n                          _buildDataRow(\n                            'News Articles',\n                            newsCount,\n                            Icons.article,\n                            Colors.green,\n                          ),\n                        ],\n                      ),\n                    ),\n                  ),\n                ],\n              ),\n            ),\n    );\n  }\n\n  Widget _buildInfoRow(String label, String value) {\n    return Padding(\n      padding: const EdgeInsets.symmetric(vertical: 4),\n      child: Row(\n        crossAxisAlignment: CrossAxisAlignment.start,\n        children: [\n          SizedBox(\n            width: 60,\n            child: Text(\n              '$label:',\n              style: const TextStyle(fontWeight: FontWeight.bold),\n            ),\n          ),\n          Expanded(child: Text(value)),\n        ],\n      ),\n    );\n  }\n\n  Widget _buildDataRow(String label, int count, IconData icon, Color color) {\n    return Padding(\n      padding: const EdgeInsets.symmetric(vertical: 8),\n      child: Row(\n        children: [\n          Icon(icon, color: color),\n          const SizedBox(width: 12),\n          Text(\n            label,\n            style: const TextStyle(fontWeight: FontWeight.w500),\n          ),\n          const Spacer(),\n          Container(\n            padding: const EdgeInsets.symmetric(horizontal: 12, vertical: 4),\n            decoration: BoxDecoration(\n              color: color.withOpacity(0.1),\n              borderRadius: BorderRadius.circular(12),\n            ),\n            child: Text(\n              count.toString(),\n              style: TextStyle(\n                color: color,\n                fontWeight: FontWeight.bold,\n              ),\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n}\n"})}),"\n",(0,a.jsx)(e.h2,{id:"step-5-exploring-sdk-features",children:"Step 5: Exploring SDK Features"}),"\n",(0,a.jsx)(e.p,{children:"Now that you have a working implementation, explore the comprehensive capabilities of the STADATA Flutter SDK:"}),"\n",(0,a.jsx)(e.h3,{id:"list-api---data-discovery",children:"List API - Data Discovery"}),"\n",(0,a.jsx)(e.p,{children:"The List API helps you discover and browse collections of statistical data:"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-dart",children:"// Discover publications\nfinal publications = await StadataFlutter.instance.list.publications(\n  domain: '0000', // National level\n  keyword: 'ekonomi', // Economic data\n  lang: DataLanguage.id,\n);\n\n// Browse news articles\nfinal news = await StadataFlutter.instance.list.news(\n  domain: '3200', // West Java\n  lang: DataLanguage.id,\n);\n\n// Find static tables\nfinal tables = await StadataFlutter.instance.list.staticTables(\n  domain: '0000',\n  keyword: 'inflasi',\n);\n"})}),"\n",(0,a.jsx)(e.h3,{id:"view-api---detailed-information",children:"View API - Detailed Information"}),"\n",(0,a.jsx)(e.p,{children:"The View API provides comprehensive details about specific items:"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-dart",children:"// Get detailed publication information\nfinal publication = await StadataFlutter.instance.view.publication(\n  id: '03220.2301',\n  domain: '0000',\n  lang: DataLanguage.id,\n);\n\n// Access publication details\nif (publication != null) {\n  print('Title: ${publication.title}');\n  print('Abstract: ${publication.abstract}');\n  print('PDF URL: ${publication.pdf}');\n  print('File Size: ${publication.size}');\n}\n"})}),"\n",(0,a.jsx)(e.h3,{id:"error-handling-best-practices",children:"Error Handling Best Practices"}),"\n",(0,a.jsx)(e.p,{children:"Implement robust error handling for production applications:"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-dart",children:"Future<void> fetchDataSafely() async {\n  try {\n    final result = await StadataFlutter.instance.list.domains();\n    // Handle successful response\n    print('Loaded ${result.data.length} domains');\n  } on ApiKeyNotFoundException {\n    // Handle API key issues\n    print('Invalid or missing API key');\n  } on ApiException catch (e) {\n    // Handle API communication errors\n    print('API Error: ${e.message}');\n  } on NetworkException {\n    // Handle network connectivity issues\n    print('Network connection failed');\n  } catch (e) {\n    // Handle unexpected errors\n    print('Unexpected error: $e');\n  }\n}\n"})}),"\n",(0,a.jsx)(e.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,a.jsx)(e.p,{children:"Congratulations! You've successfully integrated the STADATA Flutter SDK. Here's what to explore next:"}),"\n",(0,a.jsx)(e.h3,{id:"-deep-dive-into-documentation",children:"\ud83d\udcda Deep Dive into Documentation"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:(0,a.jsx)(e.a,{href:"./api-docs/list/intro",children:"List API Documentation"})})," - Discover all available data collections"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:(0,a.jsx)(e.a,{href:"./api-docs/view/intro",children:"View API Documentation"})})," - Learn about detailed data retrieval"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:(0,a.jsx)(e.a,{href:"./usage/list",children:"Usage Guide"})})," - Comprehensive usage patterns and examples"]}),"\n"]}),"\n",(0,a.jsx)(e.h3,{id:"-advanced-implementation",children:"\ud83d\udee0 Advanced Implementation"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"State Management"}),": Integrate with providers like Riverpod, Bloc, or GetX"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Caching"}),": Implement data caching for offline capabilities"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"Performance"}),": Optimize for large datasets and complex queries"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"UI Components"}),": Build reusable widgets for statistical data display"]}),"\n"]}),"\n",(0,a.jsx)(e.h3,{id:"-example-application",children:"\ud83d\udcf1 Example Application"}),"\n",(0,a.jsx)(e.p,{children:"Explore the complete example application included with the SDK:"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-bash",children:"# Navigate to the example app\ncd example\n\n# Install dependencies\nflutter pub get\n\n# Run the example application\nflutter run\n"})}),"\n",(0,a.jsx)(e.h3,{id:"-sdk-configuration",children:"\ud83d\udd27 SDK Configuration"}),"\n",(0,a.jsx)(e.p,{children:"The STADATA Flutter SDK has a simple configuration with only the API key required:"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-dart",children:"// SDK initialization - only API key is configurable\nawait StadataFlutter.instance.init(\n  apiKey: 'YOUR_API_KEY', // Required: Your BPS API key\n);\n"})}),"\n",(0,a.jsxs)(e.p,{children:[(0,a.jsx)(e.strong,{children:"Note"}),": The SDK uses default settings for all other configurations including base URL, timeouts, and language preferences, which can be specified per API call when needed."]}),"\n",(0,a.jsx)(e.h3,{id:"-production-checklist",children:"\ud83d\ude80 Production Checklist"}),"\n",(0,a.jsx)(e.p,{children:"Before deploying your application:"}),"\n",(0,a.jsxs)(e.ul,{className:"contains-task-list",children:["\n",(0,a.jsxs)(e.li,{className:"task-list-item",children:[(0,a.jsx)(e.input,{type:"checkbox",disabled:!0})," ",(0,a.jsx)(e.strong,{children:"Secure API Key"}),": Store API key securely, never in source code"]}),"\n",(0,a.jsxs)(e.li,{className:"task-list-item",children:[(0,a.jsx)(e.input,{type:"checkbox",disabled:!0})," ",(0,a.jsx)(e.strong,{children:"Error Handling"}),": Implement comprehensive error handling"]}),"\n",(0,a.jsxs)(e.li,{className:"task-list-item",children:[(0,a.jsx)(e.input,{type:"checkbox",disabled:!0})," ",(0,a.jsx)(e.strong,{children:"Loading States"}),": Provide user feedback during data loading"]}),"\n",(0,a.jsxs)(e.li,{className:"task-list-item",children:[(0,a.jsx)(e.input,{type:"checkbox",disabled:!0})," ",(0,a.jsx)(e.strong,{children:"Offline Support"}),": Handle network connectivity issues"]}),"\n",(0,a.jsxs)(e.li,{className:"task-list-item",children:[(0,a.jsx)(e.input,{type:"checkbox",disabled:!0})," ",(0,a.jsx)(e.strong,{children:"Performance"}),": Optimize for your specific use case"]}),"\n",(0,a.jsxs)(e.li,{className:"task-list-item",children:[(0,a.jsx)(e.input,{type:"checkbox",disabled:!0})," ",(0,a.jsx)(e.strong,{children:"Testing"}),": Write tests for your statistical data integration"]}),"\n",(0,a.jsxs)(e.li,{className:"task-list-item",children:[(0,a.jsx)(e.input,{type:"checkbox",disabled:!0})," ",(0,a.jsx)(e.strong,{children:"Documentation"}),": Document your implementation for team members"]}),"\n"]}),"\n",(0,a.jsx)(e.h2,{id:"support-and-resources",children:"Support and Resources"}),"\n",(0,a.jsx)(e.p,{children:"Need help or have questions?"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"\ud83d\udcd6 Documentation"}),": Complete API reference and guides"]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"\ud83d\udcac Issues"}),": Report bugs or request features on ",(0,a.jsx)(e.a,{href:"https://github.com/ryanaidilp/stadata_flutter_sdk/issues",children:"GitHub"})]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"\ud83d\udce7 BPS Support"}),": Contact BPS for API-related questions at ",(0,a.jsx)(e.a,{href:"https://webapi.bps.go.id",children:"webapi.bps.go.id"})]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.strong,{children:"\ud83c\udfdb Official BPS"}),": Visit ",(0,a.jsx)(e.a,{href:"https://www.bps.go.id",children:"bps.go.id"})," for official statistics"]}),"\n"]}),"\n",(0,a.jsx)(e.hr,{}),"\n",(0,a.jsxs)(e.p,{children:[(0,a.jsx)(e.strong,{children:"Ready to build amazing statistical applications with Indonesian government data? Start exploring the comprehensive API documentation and build something great!"})," \ud83c\uddee\ud83c\udde9\ud83d\udcca"]})]})}function u(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(c,{...n})}):c(n)}},8453:(n,e,t)=>{t.d(e,{R:()=>o,x:()=>r});var i=t(6540);const a={},s=i.createContext(a);function o(n){const e=i.useContext(s);return i.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function r(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:o(n.components),i.createElement(s.Provider,{value:e},n.children)}}}]);