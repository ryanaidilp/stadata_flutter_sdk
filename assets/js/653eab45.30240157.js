"use strict";(self.webpackChunkstadata_flutter_sdk=self.webpackChunkstadata_flutter_sdk||[]).push([[5328],{3561:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"api-docs/list/news","title":"News","description":"The News API provides access to current news and announcements from BPS (Badan Pusat Statistik) Indonesia offices across all regions. This API serves as the primary source for official BPS news releases, statistical announcements, policy updates, survey results, and other important communications from Indonesia\'s national statistical agency.","source":"@site/docs/api-docs/list/news.md","sourceDirName":"api-docs/list","slug":"/api-docs/list/news","permalink":"/stadata_flutter_sdk/docs/api-docs/list/news","draft":false,"unlisted":false,"editUrl":"https://github.com/ryanaidilp/stadata_flutter_sdk/tree/main/docs/docs/api-docs/list/news.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"News Categories","permalink":"/stadata_flutter_sdk/docs/api-docs/list/news-categories"},"next":{"title":"Press Releases","permalink":"/stadata_flutter_sdk/docs/api-docs/list/press-releases"}}');var s=t(4848),a=t(8453);const r={},l="News",o={},c=[{value:"Understanding BPS News Content",id:"understanding-bps-news-content",level:2},{value:"News Organization Structure",id:"news-organization-structure",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Examples",id:"examples",level:2},{value:"1. Get All News from a Domain",id:"1-get-all-news-from-a-domain",level:3},{value:"2. Search News by Keyword",id:"2-search-news-by-keyword",level:3},{value:"3. Filter News by Category and Time",id:"3-filter-news-by-category-and-time",level:3},{value:"4. Browse News with Pagination",id:"4-browse-news-with-pagination",level:3},{value:"5. Advanced News Analysis",id:"5-advanced-news-analysis",level:3},{value:"Properties (News)",id:"properties-news",level:2},{value:"Common News Categories",id:"common-news-categories",level:2},{value:"Statistical Release News",id:"statistical-release-news",level:3},{value:"Policy and Methodological News",id:"policy-and-methodological-news",level:3},{value:"Educational and Outreach News",id:"educational-and-outreach-news",level:3},{value:"Administrative News",id:"administrative-news",level:3},{value:"News Discovery Workflow",id:"news-discovery-workflow",level:2},{value:"Complete News Monitoring Example",id:"complete-news-monitoring-example",level:3},{value:"Integration with Other APIs",id:"integration-with-other-apis",level:2},{value:"Building News-Based Reports",id:"building-news-based-reports",level:3},{value:"Working with News Content",id:"working-with-news-content",level:2},{value:"Content Processing and Display",id:"content-processing-and-display",level:3},{value:"Error Handling",id:"error-handling",level:2},{value:"Performance Considerations",id:"performance-considerations",level:2}];function d(n){const e={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.header,{children:(0,s.jsx)(e.h1,{id:"news",children:"News"})}),"\n",(0,s.jsx)(e.p,{children:"The News API provides access to current news and announcements from BPS (Badan Pusat Statistik) Indonesia offices across all regions. This API serves as the primary source for official BPS news releases, statistical announcements, policy updates, survey results, and other important communications from Indonesia's national statistical agency."}),"\n",(0,s.jsx)(e.p,{children:"BPS news content covers a wide range of topics including new statistical releases, policy changes, survey announcements, regional developments, and public information campaigns. This news system enables users to stay informed about the latest statistical developments and BPS activities at national, provincial, and local levels."}),"\n",(0,s.jsx)(e.h2,{id:"understanding-bps-news-content",children:"Understanding BPS News Content"}),"\n",(0,s.jsx)(e.p,{children:"BPS news serves multiple purposes within Indonesia's statistical ecosystem:"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Statistical Releases"}),": Announcements of new data publications and survey results"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Policy Updates"}),": Information about methodological changes and new statistical initiatives"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Regional News"}),": Local statistical office announcements and regional developments"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Public Information"}),": Educational content and statistical literacy initiatives"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Event Announcements"}),": Information about statistical conferences, training, and workshops"]}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"news-organization-structure",children:"News Organization Structure"}),"\n",(0,s.jsx)(e.p,{children:"BPS news content is systematically organized:"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Geographic Coverage"}),": News from national, provincial, and regency/city BPS offices"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Category Classification"}),": Organized by news types and thematic areas"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Temporal Organization"}),": Filterable by publication year and month"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Content Indexing"}),": Searchable by keywords and topics"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Multimedia Integration"}),": Support for images and visual content"]}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsxs)(e.table,{children:[(0,s.jsx)(e.thead,{children:(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.th,{children:"Parameter"}),(0,s.jsx)(e.th,{children:"Type"}),(0,s.jsx)(e.th,{children:"Description"})]})}),(0,s.jsxs)(e.tbody,{children:[(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"domain"})}),(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"String"})}),(0,s.jsxs)(e.td,{children:["Domain code (region) for retrieving news ",(0,s.jsx)(e.strong,{children:"(required)"})]})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"lang"})}),(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"DataLanguage"})}),(0,s.jsxs)(e.td,{children:["Language for news data (default: ",(0,s.jsx)(e.code,{children:"DataLanguage.id"}),")"]})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"page"})}),(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"int"})}),(0,s.jsxs)(e.td,{children:["Page number (default: ",(0,s.jsx)(e.code,{children:"1"}),")"]})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"keyword"})}),(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"String?"})}),(0,s.jsx)(e.td,{children:"Keyword for searching news (optional)"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"newsCategoryId"})}),(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"String?"})}),(0,s.jsx)(e.td,{children:"Category ID for filtering news (optional)"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"month"})}),(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"int?"})}),(0,s.jsxs)(e.td,{children:["Month for filtering news (optional - ",(0,s.jsx)(e.code,{children:"1..12"}),")"]})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"year"})}),(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"int?"})}),(0,s.jsx)(e.td,{children:"Year for filtering news (optional)"})]})]})]}),"\n",(0,s.jsx)(e.h2,{id:"examples",children:"Examples"}),"\n",(0,s.jsx)(e.h3,{id:"1-get-all-news-from-a-domain",children:"1. Get All News from a Domain"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-dart",children:"// Fetch recent news from Central Java BPS\nfinal newsResult = await StadataFlutter.instance.list.news(\n  domain: '3300', // Central Java domain code\n  lang: DataLanguage.id,\n);\n\nfinal newsList = newsResult.data;\nfinal pagination = newsResult.pagination;\n\n// Print pagination information\nprint('Current Page: ${pagination.page}');\nprint('Total Pages: ${pagination.pages}');\nprint('Data Count in This Page: ${pagination.count}');\nprint('Per Page: ${pagination.perPage}');\nprint('Total: ${pagination.total}');\nprint('------------------------');\n\n// Print retrieved news data\nfor (final news in newsList) {\n  print('News ID: ${news.id}');\n  print('Title: ${news.title}');\n  print('Category: ${news.category ?? 'General'}');\n  print('Release Date: ${news.releaseDate}');\n  print('Picture: ${news.picture}');\n  print('Content Preview: ${news.content.substring(0, 100)}...');\n  print('------------------------');\n}\n"})}),"\n",(0,s.jsx)(e.h3,{id:"2-search-news-by-keyword",children:"2. Search News by Keyword"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-dart",children:"// Search for statistics-related news\nfinal statisticsNews = await StadataFlutter.instance.list.news(\n  domain: '0000', // National level\n  lang: DataLanguage.id,\n  keyword: 'inflasi', // Search for inflation-related news\n);\n\n// Process search results\nfor (final news in statisticsNews.data) {\n  print('Inflation News: ${news.title}');\n  print('Category: ${news.category ?? 'Uncategorized'}');\n  print('Published: ${news.releaseDate}');\n  print('Category ID: ${news.categoryId}');\n  \n  // Check for image content\n  if (news.picture.isNotEmpty) {\n    print('Featured Image: ${news.picture}');\n  }\n  \n  // Extract key information from content\n  final contentWords = news.content.split(' ').take(20).join(' ');\n  print('Summary: $contentWords...');\n  print('------------------------');\n}\n"})}),"\n",(0,s.jsx)(e.h3,{id:"3-filter-news-by-category-and-time",children:"3. Filter News by Category and Time"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-dart",children:"// Get economic news from Jakarta in 2023\nfinal economicNews = await StadataFlutter.instance.list.news(\n  domain: '3100', // DKI Jakarta\n  lang: DataLanguage.id,\n  newsCategoryId: '1', // Assuming '1' is economic category\n  year: 2023,\n  month: 12, // December\n);\n\n// Analyze economic news\nprint('=== Economic News - December 2023 ===');\nfor (final news in economicNews.data) {\n  print('Economic Update: ${news.title}');\n  print('Publication Date: ${news.releaseDate}');\n  print('Category: ${news.category}');\n  \n  // Calculate days since publication\n  final daysSince = DateTime.now().difference(news.releaseDate).inDays;\n  print('Published $daysSince days ago');\n  \n  // Check content length for detailed articles\n  if (news.content.length > 500) {\n    print('Detailed article (${news.content.length} characters)');\n  } else {\n    print('Brief announcement');\n  }\n  \n  print('------------------------');\n}\n"})}),"\n",(0,s.jsx)(e.h3,{id:"4-browse-news-with-pagination",children:"4. Browse News with Pagination"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-dart",children:"// Systematically browse through all available news\nclass NewsBrowser {\n  static Future<void> browseAllNews(String domain) async {\n    int currentPage = 1;\n    bool hasMorePages = true;\n    final allNews = <News>[];\n    \n    while (hasMorePages && currentPage <= 5) { // Limit to first 5 pages\n      final pageResult = await StadataFlutter.instance.list.news(\n        domain: domain,\n        lang: DataLanguage.id,\n        page: currentPage,\n      );\n      \n      allNews.addAll(pageResult.data);\n      print('Page $currentPage: ${pageResult.data.length} news items');\n      \n      hasMorePages = currentPage < pageResult.pagination.pages;\n      currentPage++;\n      \n      // Rate limiting\n      await Future.delayed(Duration(milliseconds: 500));\n    }\n    \n    print('Total news collected: ${allNews.length}');\n    \n    // Analyze news distribution by category\n    final categoryGroups = <String, int>{};\n    for (final news in allNews) {\n      final category = news.category ?? 'Uncategorized';\n      categoryGroups[category] = (categoryGroups[category] ?? 0) + 1;\n    }\n    \n    print('\\\\n=== News by Category ===');\n    categoryGroups.forEach((category, count) {\n      print('$category: $count articles');\n    });\n  }\n}\n"})}),"\n",(0,s.jsx)(e.h3,{id:"5-advanced-news-analysis",children:"5. Advanced News Analysis"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-dart",children:"// Comprehensive news analysis with multiple filters\nclass NewsAnalyzer {\n  static Future<void> analyzeNewsContent(String domain) async {\n    try {\n      // 1. Get overview of all recent news\n      final allNews = await StadataFlutter.instance.list.news(\n        domain: domain,\n        lang: DataLanguage.id,\n      );\n      \n      print('Total news in domain $domain: ${allNews.pagination.total}');\n      \n      // 2. Analyze news by recent months\n      final currentYear = DateTime.now().year;\n      final recentMonths = [\n        DateTime.now().month - 2,\n        DateTime.now().month - 1,\n        DateTime.now().month,\n      ].where((month) => month > 0).toList();\n      \n      for (final month in recentMonths) {\n        final monthlyNews = await StadataFlutter.instance.list.news(\n          domain: domain,\n          lang: DataLanguage.id,\n          year: currentYear,\n          month: month,\n        );\n        \n        print('Month $month/$currentYear: ${monthlyNews.data.length} articles');\n      }\n      \n      // 3. Find news with images\n      final newsWithImages = allNews.data\n          .where((news) => news.picture.isNotEmpty)\n          .toList();\n      \n      print('News with images: ${newsWithImages.length}');\n      \n      // 4. Analyze content length distribution\n      final shortNews = allNews.data.where((n) => n.content.length < 300).length;\n      final mediumNews = allNews.data.where((n) => n.content.length >= 300 && n.content.length < 1000).length;\n      final longNews = allNews.data.where((n) => n.content.length >= 1000).length;\n      \n      print('\\\\n=== Content Length Analysis ===');\n      print('Short articles: $shortNews');\n      print('Medium articles: $mediumNews');\n      print('Long articles: $longNews');\n      \n    } catch (e) {\n      print('Error analyzing news: $e');\n    }\n  }\n}\n"})}),"\n",(0,s.jsx)(e.h2,{id:"properties-news",children:"Properties (News)"}),"\n",(0,s.jsxs)(e.table,{children:[(0,s.jsx)(e.thead,{children:(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.th,{children:"Property"}),(0,s.jsx)(e.th,{children:"Type"}),(0,s.jsx)(e.th,{children:"Description"})]})}),(0,s.jsxs)(e.tbody,{children:[(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"id"})}),(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"int"})}),(0,s.jsx)(e.td,{children:"Unique identifier for the news article"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"categoryId"})}),(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"String"})}),(0,s.jsx)(e.td,{children:"Category identifier for the news (for filtering)"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"category"})}),(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"String?"})}),(0,s.jsx)(e.td,{children:"Name of the news category (optional)"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"title"})}),(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"String"})}),(0,s.jsx)(e.td,{children:"Official title of the news article"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"content"})}),(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"String"})}),(0,s.jsx)(e.td,{children:"Full content text of the news article"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"releaseDate"})}),(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"DateTime"})}),(0,s.jsx)(e.td,{children:"Date and time when the news was published"})]}),(0,s.jsxs)(e.tr,{children:[(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"picture"})}),(0,s.jsx)(e.td,{children:(0,s.jsx)(e.code,{children:"String"})}),(0,s.jsx)(e.td,{children:"URL of the featured image or picture for the news"})]})]})]}),"\n",(0,s.jsx)(e.h2,{id:"common-news-categories",children:"Common News Categories"}),"\n",(0,s.jsx)(e.h3,{id:"statistical-release-news",children:"Statistical Release News"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Survey Results"}),": New data releases from national surveys"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Economic Indicators"}),": Inflation, GDP, employment statistics announcements"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Demographic Updates"}),": Population census results, demographic analysis"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Regional Statistics"}),": Provincial and local statistical releases"]}),"\n"]}),"\n",(0,s.jsx)(e.h3,{id:"policy-and-methodological-news",children:"Policy and Methodological News"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Survey Methodology"}),": Updates to statistical collection methods"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Classification Changes"}),": Updates to statistical classifications"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Data Quality"}),": Information about data revisions and improvements"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"International Standards"}),": Adoption of new international statistical standards"]}),"\n"]}),"\n",(0,s.jsx)(e.h3,{id:"educational-and-outreach-news",children:"Educational and Outreach News"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Statistical Literacy"}),": Public education about statistics"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Training Programs"}),": Statistical capacity building initiatives"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Community Engagement"}),": Public consultation and feedback programs"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Media Relations"}),": Press conferences and media briefings"]}),"\n"]}),"\n",(0,s.jsx)(e.h3,{id:"administrative-news",children:"Administrative News"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Office Updates"}),": BPS office operational announcements"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Staff Changes"}),": Leadership appointments and organizational updates"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Infrastructure"}),": Technology upgrades and facility improvements"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Partnerships"}),": Collaboration announcements with other agencies"]}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"news-discovery-workflow",children:"News Discovery Workflow"}),"\n",(0,s.jsx)(e.p,{children:"The typical workflow for discovering and consuming BPS news:"}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Domain Selection"}),": Choose the geographic area of interest"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Category Filtering"}),": Focus on specific news categories"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Temporal Filtering"}),": Filter by publication timeframe"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Keyword Search"}),": Use search terms to find relevant content"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Content Analysis"}),": Review full articles and multimedia content"]}),"\n"]}),"\n",(0,s.jsx)(e.h3,{id:"complete-news-monitoring-example",children:"Complete News Monitoring Example"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-dart",children:"// Comprehensive news monitoring and alert system\nclass NewsMonitor {\n  static Future<void> monitorBPSNews() async {\n    try {\n      // Monitor national news for important announcements\n      final nationalNews = await StadataFlutter.instance.list.news(\n        domain: '0000', // National\n        lang: DataLanguage.id,\n        keyword: 'survei',\n      );\n      \n      print('National Survey News: ${nationalNews.data.length}');\n      \n      // Check for recent provincial news\n      final provinces = ['3100', '3200', '3300']; // Jakarta, West Java, Central Java\n      \n      for (final province in provinces) {\n        final provinceNews = await StadataFlutter.instance.list.news(\n          domain: province,\n          lang: DataLanguage.id,\n          year: DateTime.now().year,\n          month: DateTime.now().month,\n        );\n        \n        print('Province $province current month: ${provinceNews.data.length} articles');\n        \n        // Identify urgent news (published within last 7 days)\n        final recentNews = provinceNews.data.where((news) {\n          final daysSince = DateTime.now().difference(news.releaseDate).inDays;\n          return daysSince <= 7;\n        }).toList();\n        \n        if (recentNews.isNotEmpty) {\n          print('Recent news from province $province:');\n          for (final news in recentNews.take(3)) {\n            print('- ${news.title}');\n            print('  Published: ${news.releaseDate}');\n            if (news.picture.isNotEmpty) {\n              print('  Has image: Yes');\n            }\n          }\n        }\n      }\n      \n    } catch (e) {\n      print('News monitoring error: $e');\n    }\n  }\n}\n"})}),"\n",(0,s.jsx)(e.h2,{id:"integration-with-other-apis",children:"Integration with Other APIs"}),"\n",(0,s.jsx)(e.h3,{id:"building-news-based-reports",children:"Building News-Based Reports"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-dart",children:"// Integrate news with other BPS data for comprehensive reporting\nFuture<void> buildNewsReport(String domain) async {\n  try {\n    // Get domain information\n    final domains = await StadataFlutter.instance.list.domains();\n    final currentDomain = domains.data.firstWhere((d) => d.id == domain);\n    \n    // Get recent news\n    final news = await StadataFlutter.instance.list.news(\n      domain: domain,\n      lang: DataLanguage.id,\n      year: DateTime.now().year,\n    );\n    \n    // Get news categories for context\n    final newsCategories = await StadataFlutter.instance.list.newsCategories(\n      domain: domain,\n      lang: DataLanguage.id,\n    );\n    \n    // Get related publications\n    final publications = await StadataFlutter.instance.list.publications(\n      domain: domain,\n      lang: DataLanguage.id,\n    );\n    \n    print('=== News Report for ${currentDomain.name} ===');\n    print('News Articles: ${news.data.length}');\n    print('News Categories: ${newsCategories.data.length}');\n    print('Related Publications: ${publications.data.length}');\n    \n    // Cross-reference analysis\n    print('\\\\n=== Recent News Highlights ===');\n    final recentNews = news.data.take(5).toList();\n    for (final article in recentNews) {\n      print('${article.title} (${article.releaseDate})');\n      \n      // Find related category information\n      final relatedCategory = newsCategories.data\n          .where((cat) => cat.id == article.categoryId)\n          .firstOrNull;\n      \n      if (relatedCategory != null) {\n        print('  Category: ${relatedCategory.name}');\n      }\n    }\n    \n  } catch (e) {\n    print('Report generation error: $e');\n  }\n}\n"})}),"\n",(0,s.jsx)(e.h2,{id:"working-with-news-content",children:"Working with News Content"}),"\n",(0,s.jsx)(e.h3,{id:"content-processing-and-display",children:"Content Processing and Display"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-dart",children:"// Process and format news content for display\nclass NewsFormatter {\n  static String formatNewsContent(News news) {\n    // Format title\n    final formattedTitle = news.title.toUpperCase();\n    \n    // Format date\n    final dateFormatter = DateFormat('dd MMMM yyyy');\n    final formattedDate = dateFormatter.format(news.releaseDate);\n    \n    // Process content\n    String processedContent = news.content\n        .replaceAll(RegExp(r'\\s+'), ' ') // Normalize whitespace\n        .trim();\n    \n    // Truncate if too long\n    if (processedContent.length > 500) {\n      processedContent = '${processedContent.substring(0, 500)}...';\n    }\n    \n    return '''\n$formattedTitle\n\nPublished: $formattedDate\nCategory: ${news.category ?? 'General'}\n\n$processedContent\n    ''';\n  }\n  \n  static Widget buildNewsCard(News news) {\n    return Card(\n      margin: EdgeInsets.all(8),\n      child: Column(\n        crossAxisAlignment: CrossAxisAlignment.start,\n        children: [\n          // Featured image\n          if (news.picture.isNotEmpty)\n            Image.network(\n              news.picture,\n              height: 200,\n              width: double.infinity,\n              fit: BoxFit.cover,\n              errorBuilder: (context, error, stackTrace) {\n                return Container(\n                  height: 200,\n                  color: Colors.grey[300],\n                  child: Icon(Icons.image_not_supported),\n                );\n              },\n            ),\n          \n          Padding(\n            padding: EdgeInsets.all(16),\n            child: Column(\n              crossAxisAlignment: CrossAxisAlignment.start,\n              children: [\n                Text(\n                  news.title,\n                  style: TextStyle(\n                    fontSize: 18,\n                    fontWeight: FontWeight.bold,\n                  ),\n                ),\n                SizedBox(height: 8),\n                Text(\n                  'Category: ${news.category ?? 'General'}',\n                  style: TextStyle(color: Colors.blue),\n                ),\n                Text(\n                  DateFormat('dd MMM yyyy').format(news.releaseDate),\n                  style: TextStyle(color: Colors.grey),\n                ),\n                SizedBox(height: 12),\n                Text(\n                  news.content.length > 150 \n                      ? '${news.content.substring(0, 150)}...'\n                      : news.content,\n                ),\n              ],\n            ),\n          ),\n        ],\n      ),\n    );\n  }\n}\n"})}),"\n",(0,s.jsx)(e.h2,{id:"error-handling",children:"Error Handling"}),"\n",(0,s.jsxs)(e.p,{children:["News API methods return ",(0,s.jsx)(e.code,{children:"Future<ListResult<News>>"})," and may throw specific exceptions:"]}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"NewsException"}),": News-related errors (invalid domain, category errors)"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"ApiException"}),": Network or API-related errors"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"ApiKeyNotFoundException"}),": Invalid or missing API key"]}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-dart",children:"try {\n  final result = await StadataFlutter.instance.list.news(\n    domain: '3200',\n    keyword: 'ekonomi',\n    newsCategoryId: '1',\n  );\n  \n  // Process successful result\n  print('Found ${result.data.length} news articles');\n  \n} on NewsException catch (e) {\n  print('News error: ${e.message}');\n  // Handle domain validation errors or category issues\n  \n} on ApiException catch (e) {\n  print('API error: ${e.message}');\n  // Handle network connectivity or API service errors\n  \n} catch (e) {\n  print('Unexpected error: $e');\n  // Handle any other unexpected errors\n}\n"})}),"\n",(0,s.jsx)(e.h2,{id:"performance-considerations",children:"Performance Considerations"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Content Loading"}),": Large news content may require progressive loading"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Image Optimization"}),": Implement proper image caching and lazy loading"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Search Efficiency"}),": Use specific keywords to reduce result sets"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Pagination"}),": Implement efficient pagination for large news archives"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Content Caching"}),": Cache frequently accessed news content locally"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.strong,{children:"Date Filtering"}),": Use date filters to improve query performance"]}),"\n"]})]})}function h(n={}){const{wrapper:e}={...(0,a.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(d,{...n})}):d(n)}},8453:(n,e,t)=>{t.d(e,{R:()=>r,x:()=>l});var i=t(6540);const s={},a=i.createContext(s);function r(n){const e=i.useContext(a);return i.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:r(n.components),i.createElement(a.Provider,{value:e},n.children)}}}]);